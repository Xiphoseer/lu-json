{"type":"Chunk","body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"require"},"arguments":[{"type":"StringLiteral","value":"client/ai/L_BOUNCER_BASIC","raw":"'client/ai/L_BOUNCER_BASIC'"}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"require"},"arguments":[{"type":"StringLiteral","value":"o_mis","raw":"'o_mis'"}]}},{"type":"AssignmentStatement","variables":[{"type":"Identifier","name":"CONSTANTS"}],"init":[{"type":"TableConstructorExpression","fields":[]}]},{"type":"AssignmentStatement","variables":[{"type":"IndexExpression","base":{"type":"Identifier","name":"CONSTANTS"},"index":{"type":"StringLiteral","value":"effectNum","raw":"\"effectNum\""}}],"init":[{"type":"NumericLiteral","value":291,"raw":"291"}]},{"type":"AssignmentStatement","variables":[{"type":"IndexExpression","base":{"type":"Identifier","name":"CONSTANTS"},"index":{"type":"StringLiteral","value":"effectName","raw":"\"effectName\""}}],"init":[{"type":"StringLiteral","value":"bouncer","raw":"\"bouncer\""}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"onStartup"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"}],"body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"storedOnce","raw":"\"storedOnce\""},{"type":"BooleanLiteral","value":false,"raw":"false"}]}}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"onBouncerTriggered"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"},{"type":"Identifier","name":"msg"}],"body":[{"type":"LocalStatement","variables":[{"type":"Identifier","name":"player"}],"init":[{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"triggerObj"},"base":{"type":"Identifier","name":"msg"}}]},{"type":"LocalStatement","variables":[{"type":"Identifier","name":"objPos"}],"init":[{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"pos"},"base":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetPosition"},"base":{"type":"Identifier","name":"player"}},"arguments":[]}}]},{"type":"AssignmentStatement","variables":[{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"y"},"base":{"type":"Identifier","name":"objPos"}}],"init":[{"type":"BinaryExpression","operator":"+","left":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"y"},"base":{"type":"Identifier","name":"objPos"}},"right":{"type":"NumericLiteral","value":1,"raw":"1"}}]},{"type":"CallStatement","expression":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetPosition"},"base":{"type":"Identifier","name":"player"}},"arguments":{"type":"TableConstructorExpression","fields":[{"type":"TableKeyString","key":{"type":"Identifier","name":"pos"},"value":{"type":"Identifier","name":"objPos"}}]}}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"bounceObj"},"arguments":[{"type":"Identifier","name":"self"},{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"triggerObj"},"base":{"type":"Identifier","name":"msg"}}]}},{"type":"AssignmentStatement","variables":[{"type":"Identifier","name":"bHasBeenUsed"}],"init":[{"type":"BooleanLiteral","value":true,"raw":"true"}]}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"onProximityUpdate"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"},{"type":"Identifier","name":"msg"}],"body":[{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"BinaryExpression","operator":"==","left":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"storedOnce","raw":"\"storedOnce\""}]},"right":{"type":"BooleanLiteral","value":false,"raw":"false"},"inParens":true},"body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"StoreOnce"},"arguments":[{"type":"Identifier","name":"self"}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"storedOnce","raw":"\"storedOnce\""},{"type":"BooleanLiteral","value":true,"raw":"true"}]}}]}]}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"EnableEffect"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"},{"type":"Identifier","name":"name"}],"body":[{"type":"LocalStatement","variables":[{"type":"Identifier","name":"myEffect"}],"init":[{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"Effect","raw":"\"Effect\""}]}]},{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"Identifier","name":"myEffect","inParens":true},"body":[{"type":"ReturnStatement","arguments":[]}]}]},{"type":"CallStatement","expression":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"PlayFXEffect"},"base":{"type":"Identifier","name":"self"}},"arguments":{"type":"TableConstructorExpression","fields":[{"type":"TableKeyString","key":{"type":"Identifier","name":"name"},"value":{"type":"IndexExpression","base":{"type":"Identifier","name":"CONSTANTS"},"index":{"type":"StringLiteral","value":"effectName","raw":"\"effectName\""}}},{"type":"TableKeyString","key":{"type":"Identifier","name":"effectID"},"value":{"type":"IndexExpression","base":{"type":"Identifier","name":"CONSTANTS"},"index":{"type":"StringLiteral","value":"effectNum","raw":"\"effectNum\""}}},{"type":"TableKeyString","key":{"type":"Identifier","name":"type"},"value":{"type":"Identifier","name":"name"}}]}}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"Effect","raw":"\"Effect\""},{"type":"BooleanLiteral","value":true,"raw":"true"}]}}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"RemoveEffect"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"}],"body":[{"type":"LocalStatement","variables":[{"type":"Identifier","name":"myEffect"}],"init":[{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"Effect","raw":"\"Effect\""}]}]},{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"Identifier","name":"myEffect","inParens":true},"body":[{"type":"CallStatement","expression":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"StopFXEffect"},"base":{"type":"Identifier","name":"self"}},"arguments":{"type":"TableConstructorExpression","fields":[{"type":"TableKeyString","key":{"type":"Identifier","name":"name"},"value":{"type":"IndexExpression","base":{"type":"Identifier","name":"CONSTANTS"},"index":{"type":"StringLiteral","value":"effectName","raw":"\"effectName\""}}}]}}}]}]},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"Effect","raw":"\"Effect\""},{"type":"BooleanLiteral","value":false,"raw":"false"}]}}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"onNotifyObject"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"},{"type":"Identifier","name":"msg"}],"body":[{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"BinaryExpression","operator":"==","left":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"name"},"base":{"type":"Identifier","name":"msg"}},"right":{"type":"StringLiteral","value":"on","raw":"\"on\""}},"body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"EnableEffect"},"arguments":[{"type":"Identifier","name":"self"},{"type":"StringLiteral","value":"bounce-fx","raw":"\"bounce-fx\""}]}}]}]},{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"BinaryExpression","operator":"==","left":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"name"},"base":{"type":"Identifier","name":"msg"}},"right":{"type":"StringLiteral","value":"off","raw":"\"off\""}},"body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"RemoveEffect"},"arguments":[{"type":"Identifier","name":"self"}]}}]}]}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"StoreOnce"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"}],"body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"storedOnce","raw":"\"storedOnce\""},{"type":"BooleanLiteral","value":true,"raw":"true"}]}},{"type":"LocalStatement","variables":[{"type":"Identifier","name":"switch"}],"init":[{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"objects"},"base":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetObjectsInGroup"},"base":{"type":"Identifier","name":"self"}},"arguments":{"type":"TableConstructorExpression","fields":[{"type":"TableKeyString","key":{"type":"Identifier","name":"group"},"value":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"grp_name","raw":"\"grp_name\""}]}}]}}}]},{"type":"ForNumericStatement","variable":{"type":"Identifier","name":"i"},"start":{"type":"NumericLiteral","value":1,"raw":"1"},"end":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"maxn"},"base":{"type":"Identifier","name":"table"}},"arguments":[{"type":"Identifier","name":"switch"}]},"step":null,"body":[{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"BinaryExpression","operator":"==","left":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"objtemplate"},"base":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetLOT"},"base":{"type":"IndexExpression","base":{"type":"Identifier","name":"switch"},"index":{"type":"Identifier","name":"i"}}},"arguments":[]}},"right":{"type":"NumericLiteral","value":3463,"raw":"3463"},"inParens":true},"body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"storeObjectByName"},"arguments":[{"type":"Identifier","name":"self"},{"type":"StringLiteral","value":"pet_switch","raw":"\"pet_switch\""},{"type":"IndexExpression","base":{"type":"Identifier","name":"switch"},"index":{"type":"Identifier","name":"i"}}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"storeObjectByName"},"arguments":[{"type":"IndexExpression","base":{"type":"Identifier","name":"switch"},"index":{"type":"Identifier","name":"i"}},{"type":"StringLiteral","value":"pet_bouncer","raw":"\"pet_bouncer\""},{"type":"Identifier","name":"self"}]}}]}]}]},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"SaveObjests","raw":"\"SaveObjests\""},{"type":"StringLiteral","value":"stored","raw":"\"stored\""}]}}]}],"comments":[{"type":"Comment","value":"client-side bouncer script","raw":"--client-side bouncer script"},{"type":"Comment","value":"local bHasBeenUsed = false","raw":"--local bHasBeenUsed = false"},{"type":"Comment","value":"local SWITCH_HINT_RADIUS = 6","raw":"--local SWITCH_HINT_RADIUS = 6"},{"type":"Comment","value":"local bCINEMA_ONCE = false","raw":"--local bCINEMA_ONCE = false"},{"type":"Comment","value":"CONSTANTS[\"NO_OBJECT\"] = \"0\"","raw":"--CONSTANTS[\"NO_OBJECT\"] = \"0\""},{"type":"Comment","value":"----------------------------------------------------------------------------------------","raw":"------------------------------------------------------------------------------------------"},{"type":"Comment","value":" Note: Hint messages have been removed from this script. They will be handled in code. -","raw":"-- Note: Hint messages have been removed from this script. They will be handled in code. -"},{"type":"Comment","value":"----------------------------------------------------------------------------------------","raw":"------------------------------------------------------------------------------------------"},{"type":"Comment","value":"print (\"Cine Script Started!\")","raw":"--print (\"Cine Script Started!\")"},{"type":"Comment","value":"self:SetProximityRadius{ radius = SWITCH_HINT_RADIUS, name = \"HINT_MESSAGE\" } --Set radius to detect if player is close (for hint message)","raw":"--self:SetProximityRadius{ radius = SWITCH_HINT_RADIUS, name = \"HINT_MESSAGE\" } --Set radius to detect if player is close (for hint message)"},{"type":"Comment","value":"Hackish fix for the 'bounce collision'","raw":"--Hackish fix for the 'bounce collision'"},{"type":"Comment","value":"player:DisplayChatBubble{wsText = (objPos.x .. \" \" .. objPos.y .. \" \" .. objPos.z)}","raw":"--player:DisplayChatBubble{wsText = (objPos.x .. \" \" .. objPos.y .. \" \" .. objPos.z)}"},{"type":"Comment","value":"Display hint message if player approaches button","raw":"--Display hint message if player approaches button"},{"type":"Comment","value":" Switch is approached","raw":"-- Switch is approached"},{"type":"Comment","value":"    if bHasBeenUsed == true then -- Do not display message once the player has successfully used the Pet Bouncer\r\n        return        \r\n    end\r\n        \r\n        local targetID = msg.objId\r\n        \r\n        if (msg.status == \"ENTER\" and msg.name == \"HINT_MESSAGE\" and targetID:GetFaction().faction == 1 and PetFoodMissionStatus ~= 2) then \r\n            targetID:DisplayTooltip{ bShow = true, strText = \"A pet can activate this bouncer.\", iTime = 2000 }\r\n        end\r\n        \r\n        \r\n        --play a cinematic the first time the player approaches the switch with a pet\r\n        local PetFoodMissionStatus = targetID:GetMissionState{missionID = 111}.missionState --define myMissionState as the current statess of mission 136, for the TargetID\r\n        if (bCINEMA_ONCE == false and PetFoodMissionStatus == 2) then --if the Proximity Message was \"Enter\" and the message was sent by the player, then\r\n        \r\n        --local player = GAMEOBJ:GetObjectByID(GAMEOBJ:GetLocalCharID())\r\n               --targetID:PlayCinematic { pathName = \"Bouncer_Cine\" }\r\n               \r\n               --print (\"inside if statement\")\r\n               --targetID:DisplayTooltip{ bShow = true, strText = \"CINEMATIC: Pet needs food. Pet Rancher gives food. Now try clicking your pet\", iTime = 10000 }\r\n               bCINEMA_ONCE = true\r\n        end\r\n        ","raw":"--[[\r\n    if bHasBeenUsed == true then -- Do not display message once the player has successfully used the Pet Bouncer\r\n        return        \r\n    end\r\n        \r\n        local targetID = msg.objId\r\n        \r\n        if (msg.status == \"ENTER\" and msg.name == \"HINT_MESSAGE\" and targetID:GetFaction().faction == 1 and PetFoodMissionStatus ~= 2) then \r\n            targetID:DisplayTooltip{ bShow = true, strText = \"A pet can activate this bouncer.\", iTime = 2000 }\r\n        end\r\n        \r\n        \r\n        --play a cinematic the first time the player approaches the switch with a pet\r\n        local PetFoodMissionStatus = targetID:GetMissionState{missionID = 111}.missionState --define myMissionState as the current statess of mission 136, for the TargetID\r\n        if (bCINEMA_ONCE == false and PetFoodMissionStatus == 2) then --if the Proximity Message was \"Enter\" and the message was sent by the player, then\r\n        \r\n        --local player = GAMEOBJ:GetObjectByID(GAMEOBJ:GetLocalCharID())\r\n               --targetID:PlayCinematic { pathName = \"Bouncer_Cine\" }\r\n               \r\n               --print (\"inside if statement\")\r\n               --targetID:DisplayTooltip{ bShow = true, strText = \"CINEMATIC: Pet needs food. Pet Rancher gives food. Now try clicking your pet\", iTime = 10000 }\r\n               bCINEMA_ONCE = true\r\n        end\r\n        ]]"},{"type":"Comment","value":"","raw":"--"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" Enables an effect on the spout unless one is already present","raw":"-- Enables an effect on the spout unless one is already present"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" return out if we already have an effect","raw":"-- return out if we already have an effect"},{"type":"Comment","value":" make a new effect","raw":"-- make a new effect"},{"type":"Comment","value":" save the effect","raw":"-- save the effect"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" Removes an effect on the spout","raw":"-- Removes an effect on the spout"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" get current effect","raw":"-- get current effect"},{"type":"Comment","value":" remove the effect","raw":"-- remove the effect"},{"type":"Comment","value":"-","raw":"---"},{"type":"Comment","value":"-","raw":"---"},{"type":"Comment","value":"-","raw":"---"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":"function onStartup(self) -- When the Object with this script attacthed (self) loads or \"starts up,\"\r\n    print (\"Cine Script Started!\")\r\n    self:SetProximityRadius{ radius = CINE_RADIUS, name = \"CINE_MESSAGE\" } -- Define the message for the Far Radius as \"Far_Message\"\r\n\r\nend\r\n\r\n\r\nfunction onProximityUpdate(self, msg) -- Bouncer is approached\r\n        --print (\"Proximity update!\")\r\n\r\n        local targetID = msg.objId --GGJ Define targetID as msg.objID (the thing that sent the message, which is hopefully the player)\r\n        local PetFoodMissionStatus = targetID:GetMissionState{missionID = 111}.missionState --define myMissionState as the current statess of mission 136, for the TargetID\r\n        --print (\"PetFoodMission Status is \".. BrickMissionStatus)\r\n\r\n         if (msg.status == \"ENTER\" and msg.name == \"CINE_MESSAGE\" and msg.objId:GetFaction().faction == 1 and bCINEMA_ONCE == 0) then --if the Proximity Message was \"Enter\" and the message was sent by the player, then\r\n\r\n               --print (PetFoodMissionStatus)\r\n               \r\n               --Taming Mission Messages\r\n               if (PetFoodMissionStatus ~= 2) then -- Mission is any state other than accepted\r\n                  return\r\n               end\r\n               \r\n               \r\n               --local player = GAMEOBJ:GetObjectByID(GAMEOBJ:GetLocalCharID())\r\n               targetID:PlayCinematic { pathName = \"Bouncer_Cine\" }\r\n               \r\n               --print (\"inside if statement\")\r\n               targetID:DisplayChatBubble{wsText = \"Cinematic joy!\"}  \r\n               bCINEMA_ONCE = 1\r\n\r\n               \r\n\r\n         end\r\n\r\nend\r\n","raw":"--[[\r\nfunction onStartup(self) -- When the Object with this script attacthed (self) loads or \"starts up,\"\r\n    print (\"Cine Script Started!\")\r\n    self:SetProximityRadius{ radius = CINE_RADIUS, name = \"CINE_MESSAGE\" } -- Define the message for the Far Radius as \"Far_Message\"\r\n\r\nend\r\n\r\n\r\nfunction onProximityUpdate(self, msg) -- Bouncer is approached\r\n        --print (\"Proximity update!\")\r\n\r\n        local targetID = msg.objId --GGJ Define targetID as msg.objID (the thing that sent the message, which is hopefully the player)\r\n        local PetFoodMissionStatus = targetID:GetMissionState{missionID = 111}.missionState --define myMissionState as the current statess of mission 136, for the TargetID\r\n        --print (\"PetFoodMission Status is \".. BrickMissionStatus)\r\n\r\n         if (msg.status == \"ENTER\" and msg.name == \"CINE_MESSAGE\" and msg.objId:GetFaction().faction == 1 and bCINEMA_ONCE == 0) then --if the Proximity Message was \"Enter\" and the message was sent by the player, then\r\n\r\n               --print (PetFoodMissionStatus)\r\n               \r\n               --Taming Mission Messages\r\n               if (PetFoodMissionStatus ~= 2) then -- Mission is any state other than accepted\r\n                  return\r\n               end\r\n               \r\n               \r\n               --local player = GAMEOBJ:GetObjectByID(GAMEOBJ:GetLocalCharID())\r\n               targetID:PlayCinematic { pathName = \"Bouncer_Cine\" }\r\n               \r\n               --print (\"inside if statement\")\r\n               targetID:DisplayChatBubble{wsText = \"Cinematic joy!\"}  \r\n               bCINEMA_ONCE = 1\r\n\r\n               \r\n\r\n         end\r\n\r\nend\r\n]]"},{"type":"Comment","value":"","raw":"--"}]}