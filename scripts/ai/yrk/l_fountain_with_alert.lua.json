{"type":"Chunk","body":[],"comments":[{"type":"Comment","value":" REFACTORED SEPTEMBER 23, 2008.  NO LONGER USED.","raw":"-- REFACTORED SEPTEMBER 23, 2008.  NO LONGER USED."},{"type":"Comment","value":"\r\n\r\n-- Note in case we ever want to copy the Youreeka fountain and spout scripts to use in another level:\r\n-- The server-side zone script also does some of the work\r\n\t-- It watches for the fountain and all 3 spouts to load\r\n\t-- After any one of them loads, it checks to see if it has all 4 yet\r\n\t\t-- If so, then it calls the fountain's onObjectLoaded 3 times to send it each spout ID\r\n\t\t-- and calls each spout's onObjectLoaded to give it the fountain's ID\r\n\t-- See L_SKUNK_EVENT.lua functions onObjectLoaded, SendSpoutIDsToFountain, and AreAllFountainPiecesLoaded to see how it works\r\n\r\n\r\nrequire('o_mis')\r\n\r\n\r\nSPOUTS = {}\r\n\r\n\r\nCONSTANTS = {}\r\nCONSTANTS[\"SpoutLOT\"] = 3283\t\t    \t\t-- the LOT for the spouts\r\n\r\n\r\n-- states for which spouts are plugged\r\nCONSTANTS[\"SPOUTS_PLUGGED_NONE\"] = 0\r\nCONSTANTS[\"SPOUTS_PLUGGED_1\"] = 1\r\nCONSTANTS[\"SPOUTS_PLUGGED_2\"] = 2\r\nCONSTANTS[\"SPOUTS_PLUGGED_3\"] = 3\r\nCONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] = 4\r\nCONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] = 5\r\nCONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] = 6\r\nCONSTANTS[\"SPOUTS_DEACTIVATED\"] = 7\r\n\t\t\r\nCONSTANTS[\"NUM_SPOUTS\"] = 3\t\t\t\t\t\t-- how many fountain spouts there are\r\n\r\n\r\n\r\nfunction onStartup(self)\r\n\r\n    -- register with zone control object\r\n\tGAMEOBJ:GetZoneControlID():ObjectLoaded{objectID = self, templateID = self:GetLOT().objtemplate}\r\n\t\r\n\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] )\r\n\t\r\n    self:PlayAnimation{ animationID = \"normal\" }\r\n\r\nend\r\n\r\n\r\n\r\n\r\nfunction onObjectLoaded( self, msg )\r\n\r\n\tif ( msg.templateID == CONSTANTS[\"SpoutLOT\"] ) then\r\n\t\t-- store object in the spouts array\r\n\t\tlocal nextSpout = #SPOUTS + 1\r\n        SPOUTS[nextSpout] = msg.objectID:GetID()\r\n        \r\n        --print( \"---------------------FOUNTAIN: found a spout\" )\r\n       \r\n\t\tlocal spout = GAMEOBJ:GetObjectByID( SPOUTS[nextSpout] )\r\n\t\t--spout:NotifyObject{ name=\"test_spout\" }\r\n\t\tspout:SetVar( \"spoutIndex\", nextSpout )\r\n\t\tspout:NotifyObject{ name = \"storeIndex\", param1 = nextSpout }\r\n\tend\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction onNotifyObject( self, msg )\r\n\r\n    if ( msg.name == \"test_fountain\" ) then\r\n\t\r\n\t\t--print ( \"----------------------------------------\" )\r\n\t\t--print ( \"FOUNTAIN: OnNotifyObject test_fountain\" )\r\n\t\t--print ( \"----------------------------------------\" )\r\n\t\t\r\n\t\t\r\n\telseif( msg.name == \"spout1Plugged\" ) then\r\n\t\tSpout1Plugged( self )\r\n\t\t\r\n\telseif( msg.name == \"spout2Plugged\" ) then\r\n\t\tSpout2Plugged( self )\r\n\t\t\r\n\telseif( msg.name == \"spout3Plugged\" ) then\r\n\t\tSpout3Plugged( self )\r\n\t\t\r\n\telseif( msg.name == \"spout1Unplugged\" ) then\r\n\t\tSpout1Unplugged( self )\r\n\t\t\r\n\telseif( msg.name == \"spout2Unplugged\" ) then\r\n\t\tSpout2Unplugged( self )\r\n\t\t\r\n\telseif( msg.name == \"spout3Unplugged\" ) then\r\n\t\tSpout3Unplugged( self )\r\n\r\n\telseif( msg.name == \"deactivateSpouts\" ) then\r\n\t\tDeactivateSpouts( self )\r\n\t\t\r\n\telseif( msg.name == \"reactivateSpouts\" ) then\r\n\t\tReactivateSpouts( self )\r\n\t\t\r\n\tend\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\nfunction Spout1Plugged( self )\r\n\r\n\t-- if we already knew this spout was plugged, or if it has a bouncer already, we're allset\r\n\tlocal oldState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_1\"]  or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] ) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\r\n\t--print ( \"-----------------------FOUNTAIN: Spout1Plugged\" )\r\n\t\r\n\t\r\n\tlocal spout1 = GAMEOBJ:GetObjectByID( SPOUTS[1] )\r\n\tlocal spout2 = GAMEOBJ:GetObjectByID( SPOUTS[2] )\r\n\tlocal spout3 = GAMEOBJ:GetObjectByID( SPOUTS[3] )\r\n\tif ( spout1 == nil or spout2 == nil or spout3 == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\t\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"plugged\" }\r\n\t\tspout2:NotifyObject{ name=\"increased\" }\r\n\t\tspout3:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_2\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"plugged\" }\r\n\t\tspout3:NotifyObject{ name=\"launchable\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_3\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"plugged\" }\r\n\t\tspout2:NotifyObject{ name=\"launchable\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] )\r\n\t\r\n\tend\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction Spout2Plugged( self )\r\n\r\n\t-- if we already knew this spout was plugged, or if it has a bouncer already, we're allset\r\n\tlocal oldState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_2\"]  or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] ) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\r\n\t--print ( \"-----------------------FOUNTAIN: Spout2Plugged\" )\r\n\t\r\n\t\r\n\tlocal spout1 = GAMEOBJ:GetObjectByID( SPOUTS[1] )\r\n\tlocal spout2 = GAMEOBJ:GetObjectByID( SPOUTS[2] )\r\n\tlocal spout3 = GAMEOBJ:GetObjectByID( SPOUTS[3] )\r\n\tif ( spout1 == nil or spout2 == nil or spout3 == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\t\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"increased\" }\r\n\t\tspout2:NotifyObject{ name=\"plugged\" }\r\n\t\tspout3:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_2\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_1\"] ) then\r\n\t\tspout2:NotifyObject{ name=\"plugged\" }\r\n\t\tspout3:NotifyObject{ name=\"launchable\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_3\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"launchable\" }\r\n\t\tspout2:NotifyObject{ name=\"plugged\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] )\r\n\t\r\n\tend\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction Spout3Plugged( self )\r\n\r\n\t-- if we already knew this spout was plugged, or if it has a bouncer already, we're allset\r\n\tlocal oldState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_3\"]  or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] ) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\r\n\t--print ( \"-----------------------FOUNTAIN: Spout3Plugged\" )\r\n\t\r\n\t\r\n\tlocal spout1 = GAMEOBJ:GetObjectByID( SPOUTS[1] )\r\n\tlocal spout2 = GAMEOBJ:GetObjectByID( SPOUTS[2] )\r\n\tlocal spout3 = GAMEOBJ:GetObjectByID( SPOUTS[3] )\r\n\tif ( spout1 == nil or spout2 == nil or spout3 == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\t\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"increased\" }\r\n\t\tspout2:NotifyObject{ name=\"increased\" }\r\n\t\tspout3:NotifyObject{ name=\"plugged\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_3\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_1\"] ) then\r\n\t\tspout2:NotifyObject{ name=\"launchable\" }\r\n\t\tspout3:NotifyObject{ name=\"plugged\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_2\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"launchable\" }\r\n\t\tspout3:NotifyObject{ name=\"plugged\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] )\r\n\t\r\n\tend\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction Spout1Unplugged( self )\r\n\r\n\t-- if we didn't think this spout was plugged, don't worry about it\r\n\tlocal oldState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"]  or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_2\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_3\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] ) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\r\n\t--print ( \"-----------------------FOUNTAIN: Spout1Unplugged\" )\r\n\t\r\n\t\r\n\tlocal spout1 = GAMEOBJ:GetObjectByID( SPOUTS[1] )\r\n\tlocal spout2 = GAMEOBJ:GetObjectByID( SPOUTS[2] )\r\n\tlocal spout3 = GAMEOBJ:GetObjectByID( SPOUTS[3] )\r\n\tif ( spout1 == nil or spout2 == nil or spout3 == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\t\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_1\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"normal\" }\r\n\t\tspout2:NotifyObject{ name=\"normal\" }\r\n\t\tspout3:NotifyObject{ name=\"normal\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"increased\" }\r\n\t\tspout3:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_2\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"increased\" }\r\n\t\tspout2:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_3\"] )\r\n\t\r\n\tend\r\n\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction Spout2Unplugged( self )\r\n\r\n\t-- if we didn't think this spout was plugged, don't worry about it\r\n\tlocal oldState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_3\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] ) then\r\n\t\treturn\r\n\tend\r\n\r\n\t--print ( \"-----------------------FOUNTAIN: Spout2Unplugged\" )\r\n\t\r\n\tlocal spout1 = GAMEOBJ:GetObjectByID( SPOUTS[1] )\r\n\tlocal spout2 = GAMEOBJ:GetObjectByID( SPOUTS[2] )\r\n\tlocal spout3 = GAMEOBJ:GetObjectByID( SPOUTS[3] )\r\n\tif ( spout1 == nil or spout2 == nil or spout3 == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\t\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_2\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"normal\" }\r\n\t\tspout2:NotifyObject{ name=\"normal\" }\r\n\t\tspout3:NotifyObject{ name=\"normal\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] ) then\r\n\t\tspout2:NotifyObject{ name=\"increased\" }\r\n\t\tspout3:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"increased\" }\r\n\t\tspout2:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_3\"] )\r\n\t\r\n\tend\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction Spout3Unplugged( self )\r\n\r\n\t-- if we didn't think this spout was plugged, don't worry about it\r\n\tlocal oldState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\tif (  oldState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_2\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] ) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\r\n\t--print ( \"-----------------------FOUNTAIN: Spout3Unplugged\" )\r\n\t\r\n\t\r\n\tlocal spout1 = GAMEOBJ:GetObjectByID( SPOUTS[1] )\r\n\tlocal spout2 = GAMEOBJ:GetObjectByID( SPOUTS[2] )\r\n\tlocal spout3 = GAMEOBJ:GetObjectByID( SPOUTS[3] )\r\n\tif ( spout1 == nil or spout2 == nil or spout3 == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\t\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_3\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"normal\" }\r\n\t\tspout2:NotifyObject{ name=\"normal\" }\r\n\t\tspout3:NotifyObject{ name=\"normal\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] ) then\r\n\t\tspout2:NotifyObject{ name=\"increased\" }\r\n\t\tspout3:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"increased\" }\r\n\t\tspout3:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_2\"] )\r\n\t\r\n\tend\r\n\t\t\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction onFireEventServerSide( self, msg )\r\n\r\n\t--print( \"-------------FOUNTAIN: onFireEventServerSide\" )\r\n\r\n\tif ( msg.args == \"slash\" ) then\r\n\t\tDoSlashCommand( self, msg )\t\t\r\n\tend\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction DoSlashCommand( self, msg )\r\n\r\n\t-- received a slash command to simulate a player getting on or off a spout\r\n\t-- param1 is which spout\r\n\t-- param2 is on or off\r\n\t\r\n\tif ( msg.param1 == 1 ) then\r\n\t\r\n\t\tif ( msg.param2 == 1 ) then\r\n\t\t\t--print( \"-------------FOUNTAIN: DoSlashCommand, spout 1 on\" )\r\n\t\t\tSpout1Plugged( self )\r\n\t\telse\r\n\t\t\t--print( \"-------------FOUNTAIN: DoSlashCommand, spout 1 off\" )\r\n\t\t\tSpout1Unplugged( self )\r\n\t\tend\r\n\t\r\n\telseif ( msg.param1 == 2 ) then\r\n\t\r\n\t\tif ( msg.param2 == 1 ) then\r\n\t\t\t--print( \"-------------FOUNTAIN: DoSlashCommand, spout 2 on\" )\r\n\t\t\tSpout2Plugged( self )\r\n\t\telse\r\n\t\t\t--print( \"-------------FOUNTAIN: DoSlashCommand, spout 2 off\" )\r\n\t\t\tSpout2Unplugged( self )\r\n\t\tend\r\n\t\r\n\telse\r\n\t\tif ( msg.param2 == 1 ) then\r\n\t\t\t--print( \"-------------FOUNTAIN: DoSlashCommand, spout 3 on\" )\r\n\t\t\tSpout3Plugged( self )\r\n\t\telse\r\n\t\t\t--print( \"-------------FOUNTAIN: DoSlashCommand, spout 3 off\" )\r\n\t\t\tSpout3Unplugged( self )\r\n\t\tend\r\n\t\r\n\tend\r\n\r\nend\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction onFireEvent( self, msg )\r\n\t\r\n\tif ( msg.args == \"askSpout1State\" ) then\r\n\t\tAnswerSpout1State( self, msg )\r\n\t\t\r\n\telseif ( msg.args == \"askSpout2State\" ) then\r\n\t\tAnswerSpout2State( self, msg )\r\n\t\t\r\n\telseif ( msg.args == \"askSpout3State\" ) then\r\n\t\tAnswerSpout3State( self, msg )\r\n\t\t\r\n\tend\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction AnswerSpout1State( self )\r\n\r\n\t-- Spout 1's client-side script has just started up and wants to know what state the fountain is in\r\n\t\t-- so that it can set its water level accordinly.\r\n\t-- It sent a message to its server-side script, which has now asked the fountain.\r\n\t-- Tell it how high its water should be (via its server-side script).\r\n\t\r\n\t--print( \"-------------FOUNTAIN: AnswerSpout1State\" )\r\n\t\r\n\tlocal spout = GAMEOBJ:GetObjectByID( SPOUTS[1] )\r\n\tif ( spout == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\r\n\tlocal spoutsState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\t\r\n\tif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] ) then\r\n\t\tspout:NotifyObject{ name=\"normal\" }\r\n\t\r\n\telseif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_2\"]  or spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_3\"] ) then\r\n\t\tspout:NotifyObject{ name=\"increased\" }\r\n\t\r\n\telseif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] ) then\r\n\t\tspout:NotifyObject{ name=\"launchable\" }\r\n\t\t\r\n\telse\r\n\t\tspout:NotifyObject{ name=\"plugged\" }\r\n\tend\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction AnswerSpout2State( self )\r\n\r\n\t-- Spout 2's client-side script has just started up and wants to know what state the fountain is in\r\n\t\t-- so that it can set its water level accordinly.\r\n\t-- It sent a message to its server-side script, which has now asked the fountain.\r\n\t-- Tell it how high its water should be (via its server-side script).\r\n\t\r\n\t--print( \"-------------FOUNTAIN: AnswerSpout2State\" )\r\n\t\r\n\tlocal spout = GAMEOBJ:GetObjectByID( SPOUTS[2] )\r\n\tif ( spout == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\r\n\tlocal spoutsState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\t\r\n\tif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] ) then\r\n\t\tspout:NotifyObject{ name=\"normal\" }\r\n\t\r\n\telseif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_1\"]  or spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_3\"] ) then\r\n\t\tspout:NotifyObject{ name=\"increased\" }\r\n\t\r\n\telseif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] ) then\r\n\t\tspout:NotifyObject{ name=\"launchable\" }\r\n\t\t\r\n\telse\r\n\t\tspout:NotifyObject{ name=\"plugged\" }\r\n\tend\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction AnswerSpout3State( self )\r\n\r\n\t-- Spout 3's client-side script has just started up and wants to know what state the fountain is in\r\n\t\t-- so that it can set its water level accordinly.\r\n\t-- It sent a message to its server-side script, which has now asked the fountain.\r\n\t-- Tell it how high its water should be (via its server-side script).\r\n\t\r\n\t--print( \"-------------FOUNTAIN: AnswerSpout3State\" )\r\n\t\r\n\tlocal spout = GAMEOBJ:GetObjectByID( SPOUTS[3] )\r\n\tif ( spout == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\r\n\tlocal spoutsState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\t\r\n\tif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] ) then\r\n\t\tspout:NotifyObject{ name=\"normal\" }\r\n\t\r\n\telseif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_1\"]  or spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_2\"] ) then\r\n\t\tspout:NotifyObject{ name=\"increased\" }\r\n\t\r\n\telseif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] ) then\r\n\t\tspout:NotifyObject{ name=\"launchable\" }\r\n\t\t\r\n\telse\r\n\t\tspout:NotifyObject{ name=\"plugged\" }\r\n\tend\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction DeactivateSpouts( self )\r\n\r\n\t-- the skunk invasion is happening and the big base is coming up around the fountain\r\n\t-- turn off the effects and the functionality of the spouts\r\n\t\r\n\t--print( \"-------------FOUNTAIN: DeactivateSpouts\" )\r\n\t\r\n\t\r\n\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_DEACTIVATED\"] )\r\n\r\n\t\r\n\tfor spoutID = 1, CONSTANTS[\"NUM_SPOUTS\"] do\r\n\t\t\r\n\t\tlocal spout = GAMEOBJ:GetObjectByID(SPOUTS[spoutID])\r\n\t\t\r\n\t\tif ( spout ~= nil ) then\r\n\t\t\tspout:NotifyObject{ name = \"deactivate\" }\r\n\t\tend\r\n\t\t\r\n\tend\t\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction ReactivateSpouts( self )\r\n\r\n\t-- the skunk invasion just ended\r\n\t-- turn the effects and the functionality of the spouts back on\r\n\t\r\n\t--print( \"-------------FOUNTAIN: ReactivateSpouts\" )\r\n\t\r\n\r\n\tlocal spout1 = GAMEOBJ:GetObjectByID(SPOUTS[1])\r\n\tlocal spout2 = GAMEOBJ:GetObjectByID(SPOUTS[2])\r\n\tlocal spout3 = GAMEOBJ:GetObjectByID(SPOUTS[3])\r\n\t\r\n\tif ( spout1 == nil or spout2 == nil or spout3 == nil) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\t\r\n\t\r\n\t-- check the proximity objects of each spout to see if anyone is currently on it\r\n\tlocal bPlayerOn1 = DoesSpoutHaveAPlayer( self, 1 )\r\n\tlocal bPlayerOn2 = DoesSpoutHaveAPlayer( self, 2 )\r\n\tlocal bPlayerOn3 = DoesSpoutHaveAPlayer( self, 3 )\r\n\r\n\t\r\n\t-- set the spouts state based on which of the spouts were occupied\r\n\t-- and tel the spouts to set their effects / bouncer accordingly\r\n\tDetermineSpoutsState( self, bPlayerOn1, bPlayerOn2, bPlayerOn3 )\r\n\r\n\r\n\t\r\n\t-- tell the spouts to clear their deactivated flags\r\n\tfor spoutID = 1, CONSTANTS[\"NUM_SPOUTS\"] do\r\n\t\t\r\n\t\tlocal spout = GAMEOBJ:GetObjectByID(SPOUTS[spoutID])\r\n\t\t\r\n\t\tif ( spout ~= nil ) then\r\n\t\t\tspout:NotifyObject{ name = \"reactivate\" }\r\n\t\tend\r\n\t\t\r\n\tend\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction DoesSpoutHaveAPlayer( self, spoutIndex )\r\n\r\n\tif ( spoutIndex <= 0 or spoutIndex > CONSTANTS[\"NUM_SPOUTS\"] ) then\r\n\t\treturn false\r\n\tend\r\n\t\r\n\t\r\n\tlocal spout = GAMEOBJ:GetObjectByID(SPOUTS[spoutIndex])\r\n\tif ( spout == nil ) then\r\n\t\treturn\r\n\tend\t\r\n\t\r\n\t\r\n\t-- check this spout's proximity objects to see if anyone is currently on it\r\n\t\r\n\tlocal objs = spout:GetProximityObjects().objects\r\n\t\r\n\tlocal index = 1\r\n\twhile index <= table.getn(objs)  do\r\n\t\tlocal target = objs[index]\r\n\t\tlocal faction = target:GetFaction()\r\n\t\t\r\n\t\tif ( faction and faction.faction == 1 ) then\t-- it's a player\r\n\t\t\t\r\n\t\t\t--print( \"-------------FOUNTAIN: found a player at spout \" .. spoutIndex )\r\n\t\t\treturn true\r\n\t\tend\r\n\t\t\r\n\t\tindex = index + 1\r\n\tend\r\n\t\r\n\treturn false\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction DetermineSpoutsState( self, bPlayerOn1, bPlayerOn2, bPlayerOn3 )\r\n\r\n\t-- we're turning the spouts back on because the skunk event ended\r\n\t-- we've already done a proximity check on each to see if there are any players on it\r\n\t-- set the spouts state accordingly, and tell each spout its water height\r\n\t\r\n\tlocal spout1 = GAMEOBJ:GetObjectByID(SPOUTS[1])\r\n\tlocal spout2 = GAMEOBJ:GetObjectByID(SPOUTS[2])\r\n\tlocal spout3 = GAMEOBJ:GetObjectByID(SPOUTS[3])\r\n\t\r\n\tif ( spout1 == nil or spout2 == nil or spout3 == nil) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\t\r\n\t\r\n\tif ( bPlayerOn1 == false and \t\tbPlayerOn2 == false\tand\t \tbPlayerOn3 == false ) then\r\n\t\tspout1:NotifyObject{ name=\"normal\" }\r\n\t\tspout2:NotifyObject{ name=\"normal\" }\r\n\t\tspout3:NotifyObject{ name=\"normal\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] )\t\t\r\n\t\r\n\telseif ( bPlayerOn1 == true and\t\tbPlayerOn2 == false and \tbPlayerOn3 == false ) then\r\n\t\tspout1:NotifyObject{ name=\"plugged\" }\r\n\t\tspout2:NotifyObject{ name=\"increased\" }\r\n\t\tspout3:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1\"] )\r\n\r\n\telseif ( bPlayerOn1 == false and \tbPlayerOn2 == true and \t\tbPlayerOn3 == false ) then\r\n\t\tspout1:NotifyObject{ name=\"increased\" }\r\n\t\tspout2:NotifyObject{ name=\"plugged\" }\r\n\t\tspout3:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_2\"] )\r\n\t\t\r\n\telseif ( bPlayerOn1 == false and \tbPlayerOn2 == false and \tbPlayerOn3 == true ) then\r\n\t\tspout1:NotifyObject{ name=\"increased\" }\r\n\t\tspout2:NotifyObject{ name=\"increased\" }\r\n\t\tspout3:NotifyObject{ name=\"plugged\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_3\"] )\r\n\t\t\r\n\telseif ( bPlayerOn1 == true and \tbPlayerOn2 == true and \t\tbPlayerOn3 == false ) then\r\n\t\tspout1:NotifyObject{ name=\"plugged\" }\r\n\t\tspout2:NotifyObject{ name=\"plugged\" }\r\n\t\tspout3:NotifyObject{ name=\"launchable\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] )\r\n\t\t\r\n\telseif ( bPlayerOn1 == true and \tbPlayerOn2 == false and \tbPlayerOn3 == true ) then\r\n\t\tspout1:NotifyObject{ name=\"plugged\" }\r\n\t\tspout2:NotifyObject{ name=\"launchable\" }\r\n\t\tspout3:NotifyObject{ name=\"plugged\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] )\r\n\r\n\telseif ( bPlayerOn1 == false and \tbPlayerOn2 == true and \t\tbPlayerOn3 == true ) then\r\n\t\tspout1:NotifyObject{ name=\"launchable\" }\r\n\t\tspout2:NotifyObject{ name=\"plugged\" }\r\n\t\tspout3:NotifyObject{ name=\"plugged\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] )\r\n\t\t\r\n\t-- make a special case here in case there are people on all 3 spouts when the skunk invasion ends\r\n\t-- immediately bounce the player off one of them\r\n\telseif ( bPlayerOn1 == true and \tbPlayerOn2 == true and \t\tbPlayerOn3 == true ) then\r\n\t\tspout1:NotifyObject{ name=\"launchable\" }\r\n\t\tspout2:NotifyObject{ name=\"plugged\" }\r\n\t\tspout3:NotifyObject{ name=\"plugged\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] )\r\n\r\n\tend\r\n\r\nend\r\n\r\n--","raw":"--[[\r\n\r\n\r\n-- Note in case we ever want to copy the Youreeka fountain and spout scripts to use in another level:\r\n-- The server-side zone script also does some of the work\r\n\t-- It watches for the fountain and all 3 spouts to load\r\n\t-- After any one of them loads, it checks to see if it has all 4 yet\r\n\t\t-- If so, then it calls the fountain's onObjectLoaded 3 times to send it each spout ID\r\n\t\t-- and calls each spout's onObjectLoaded to give it the fountain's ID\r\n\t-- See L_SKUNK_EVENT.lua functions onObjectLoaded, SendSpoutIDsToFountain, and AreAllFountainPiecesLoaded to see how it works\r\n\r\n\r\nrequire('o_mis')\r\n\r\n\r\nSPOUTS = {}\r\n\r\n\r\nCONSTANTS = {}\r\nCONSTANTS[\"SpoutLOT\"] = 3283\t\t    \t\t-- the LOT for the spouts\r\n\r\n\r\n-- states for which spouts are plugged\r\nCONSTANTS[\"SPOUTS_PLUGGED_NONE\"] = 0\r\nCONSTANTS[\"SPOUTS_PLUGGED_1\"] = 1\r\nCONSTANTS[\"SPOUTS_PLUGGED_2\"] = 2\r\nCONSTANTS[\"SPOUTS_PLUGGED_3\"] = 3\r\nCONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] = 4\r\nCONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] = 5\r\nCONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] = 6\r\nCONSTANTS[\"SPOUTS_DEACTIVATED\"] = 7\r\n\t\t\r\nCONSTANTS[\"NUM_SPOUTS\"] = 3\t\t\t\t\t\t-- how many fountain spouts there are\r\n\r\n\r\n\r\nfunction onStartup(self)\r\n\r\n    -- register with zone control object\r\n\tGAMEOBJ:GetZoneControlID():ObjectLoaded{objectID = self, templateID = self:GetLOT().objtemplate}\r\n\t\r\n\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] )\r\n\t\r\n    self:PlayAnimation{ animationID = \"normal\" }\r\n\r\nend\r\n\r\n\r\n\r\n\r\nfunction onObjectLoaded( self, msg )\r\n\r\n\tif ( msg.templateID == CONSTANTS[\"SpoutLOT\"] ) then\r\n\t\t-- store object in the spouts array\r\n\t\tlocal nextSpout = #SPOUTS + 1\r\n        SPOUTS[nextSpout] = msg.objectID:GetID()\r\n        \r\n        --print( \"---------------------FOUNTAIN: found a spout\" )\r\n       \r\n\t\tlocal spout = GAMEOBJ:GetObjectByID( SPOUTS[nextSpout] )\r\n\t\t--spout:NotifyObject{ name=\"test_spout\" }\r\n\t\tspout:SetVar( \"spoutIndex\", nextSpout )\r\n\t\tspout:NotifyObject{ name = \"storeIndex\", param1 = nextSpout }\r\n\tend\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction onNotifyObject( self, msg )\r\n\r\n    if ( msg.name == \"test_fountain\" ) then\r\n\t\r\n\t\t--print ( \"----------------------------------------\" )\r\n\t\t--print ( \"FOUNTAIN: OnNotifyObject test_fountain\" )\r\n\t\t--print ( \"----------------------------------------\" )\r\n\t\t\r\n\t\t\r\n\telseif( msg.name == \"spout1Plugged\" ) then\r\n\t\tSpout1Plugged( self )\r\n\t\t\r\n\telseif( msg.name == \"spout2Plugged\" ) then\r\n\t\tSpout2Plugged( self )\r\n\t\t\r\n\telseif( msg.name == \"spout3Plugged\" ) then\r\n\t\tSpout3Plugged( self )\r\n\t\t\r\n\telseif( msg.name == \"spout1Unplugged\" ) then\r\n\t\tSpout1Unplugged( self )\r\n\t\t\r\n\telseif( msg.name == \"spout2Unplugged\" ) then\r\n\t\tSpout2Unplugged( self )\r\n\t\t\r\n\telseif( msg.name == \"spout3Unplugged\" ) then\r\n\t\tSpout3Unplugged( self )\r\n\r\n\telseif( msg.name == \"deactivateSpouts\" ) then\r\n\t\tDeactivateSpouts( self )\r\n\t\t\r\n\telseif( msg.name == \"reactivateSpouts\" ) then\r\n\t\tReactivateSpouts( self )\r\n\t\t\r\n\tend\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\nfunction Spout1Plugged( self )\r\n\r\n\t-- if we already knew this spout was plugged, or if it has a bouncer already, we're allset\r\n\tlocal oldState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_1\"]  or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] ) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\r\n\t--print ( \"-----------------------FOUNTAIN: Spout1Plugged\" )\r\n\t\r\n\t\r\n\tlocal spout1 = GAMEOBJ:GetObjectByID( SPOUTS[1] )\r\n\tlocal spout2 = GAMEOBJ:GetObjectByID( SPOUTS[2] )\r\n\tlocal spout3 = GAMEOBJ:GetObjectByID( SPOUTS[3] )\r\n\tif ( spout1 == nil or spout2 == nil or spout3 == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\t\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"plugged\" }\r\n\t\tspout2:NotifyObject{ name=\"increased\" }\r\n\t\tspout3:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_2\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"plugged\" }\r\n\t\tspout3:NotifyObject{ name=\"launchable\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_3\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"plugged\" }\r\n\t\tspout2:NotifyObject{ name=\"launchable\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] )\r\n\t\r\n\tend\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction Spout2Plugged( self )\r\n\r\n\t-- if we already knew this spout was plugged, or if it has a bouncer already, we're allset\r\n\tlocal oldState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_2\"]  or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] ) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\r\n\t--print ( \"-----------------------FOUNTAIN: Spout2Plugged\" )\r\n\t\r\n\t\r\n\tlocal spout1 = GAMEOBJ:GetObjectByID( SPOUTS[1] )\r\n\tlocal spout2 = GAMEOBJ:GetObjectByID( SPOUTS[2] )\r\n\tlocal spout3 = GAMEOBJ:GetObjectByID( SPOUTS[3] )\r\n\tif ( spout1 == nil or spout2 == nil or spout3 == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\t\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"increased\" }\r\n\t\tspout2:NotifyObject{ name=\"plugged\" }\r\n\t\tspout3:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_2\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_1\"] ) then\r\n\t\tspout2:NotifyObject{ name=\"plugged\" }\r\n\t\tspout3:NotifyObject{ name=\"launchable\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_3\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"launchable\" }\r\n\t\tspout2:NotifyObject{ name=\"plugged\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] )\r\n\t\r\n\tend\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction Spout3Plugged( self )\r\n\r\n\t-- if we already knew this spout was plugged, or if it has a bouncer already, we're allset\r\n\tlocal oldState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_3\"]  or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] ) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\r\n\t--print ( \"-----------------------FOUNTAIN: Spout3Plugged\" )\r\n\t\r\n\t\r\n\tlocal spout1 = GAMEOBJ:GetObjectByID( SPOUTS[1] )\r\n\tlocal spout2 = GAMEOBJ:GetObjectByID( SPOUTS[2] )\r\n\tlocal spout3 = GAMEOBJ:GetObjectByID( SPOUTS[3] )\r\n\tif ( spout1 == nil or spout2 == nil or spout3 == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\t\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"increased\" }\r\n\t\tspout2:NotifyObject{ name=\"increased\" }\r\n\t\tspout3:NotifyObject{ name=\"plugged\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_3\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_1\"] ) then\r\n\t\tspout2:NotifyObject{ name=\"launchable\" }\r\n\t\tspout3:NotifyObject{ name=\"plugged\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_2\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"launchable\" }\r\n\t\tspout3:NotifyObject{ name=\"plugged\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] )\r\n\t\r\n\tend\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction Spout1Unplugged( self )\r\n\r\n\t-- if we didn't think this spout was plugged, don't worry about it\r\n\tlocal oldState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"]  or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_2\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_3\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] ) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\r\n\t--print ( \"-----------------------FOUNTAIN: Spout1Unplugged\" )\r\n\t\r\n\t\r\n\tlocal spout1 = GAMEOBJ:GetObjectByID( SPOUTS[1] )\r\n\tlocal spout2 = GAMEOBJ:GetObjectByID( SPOUTS[2] )\r\n\tlocal spout3 = GAMEOBJ:GetObjectByID( SPOUTS[3] )\r\n\tif ( spout1 == nil or spout2 == nil or spout3 == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\t\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_1\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"normal\" }\r\n\t\tspout2:NotifyObject{ name=\"normal\" }\r\n\t\tspout3:NotifyObject{ name=\"normal\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"increased\" }\r\n\t\tspout3:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_2\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"increased\" }\r\n\t\tspout2:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_3\"] )\r\n\t\r\n\tend\r\n\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction Spout2Unplugged( self )\r\n\r\n\t-- if we didn't think this spout was plugged, don't worry about it\r\n\tlocal oldState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_3\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] ) then\r\n\t\treturn\r\n\tend\r\n\r\n\t--print ( \"-----------------------FOUNTAIN: Spout2Unplugged\" )\r\n\t\r\n\tlocal spout1 = GAMEOBJ:GetObjectByID( SPOUTS[1] )\r\n\tlocal spout2 = GAMEOBJ:GetObjectByID( SPOUTS[2] )\r\n\tlocal spout3 = GAMEOBJ:GetObjectByID( SPOUTS[3] )\r\n\tif ( spout1 == nil or spout2 == nil or spout3 == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\t\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_2\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"normal\" }\r\n\t\tspout2:NotifyObject{ name=\"normal\" }\r\n\t\tspout3:NotifyObject{ name=\"normal\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] ) then\r\n\t\tspout2:NotifyObject{ name=\"increased\" }\r\n\t\tspout3:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"increased\" }\r\n\t\tspout2:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_3\"] )\r\n\t\r\n\tend\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction Spout3Unplugged( self )\r\n\r\n\t-- if we didn't think this spout was plugged, don't worry about it\r\n\tlocal oldState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\tif (  oldState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_2\"] or\r\n\t\toldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] ) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\r\n\t--print ( \"-----------------------FOUNTAIN: Spout3Unplugged\" )\r\n\t\r\n\t\r\n\tlocal spout1 = GAMEOBJ:GetObjectByID( SPOUTS[1] )\r\n\tlocal spout2 = GAMEOBJ:GetObjectByID( SPOUTS[2] )\r\n\tlocal spout3 = GAMEOBJ:GetObjectByID( SPOUTS[3] )\r\n\tif ( spout1 == nil or spout2 == nil or spout3 == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\t\r\n\t\r\n\tif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_3\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"normal\" }\r\n\t\tspout2:NotifyObject{ name=\"normal\" }\r\n\t\tspout3:NotifyObject{ name=\"normal\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] ) then\r\n\t\tspout2:NotifyObject{ name=\"increased\" }\r\n\t\tspout3:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1\"] )\r\n\t\t\r\n\t\t\r\n\telseif ( oldState == CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] ) then\r\n\t\tspout1:NotifyObject{ name=\"increased\" }\r\n\t\tspout3:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_2\"] )\r\n\t\r\n\tend\r\n\t\t\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction onFireEventServerSide( self, msg )\r\n\r\n\t--print( \"-------------FOUNTAIN: onFireEventServerSide\" )\r\n\r\n\tif ( msg.args == \"slash\" ) then\r\n\t\tDoSlashCommand( self, msg )\t\t\r\n\tend\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction DoSlashCommand( self, msg )\r\n\r\n\t-- received a slash command to simulate a player getting on or off a spout\r\n\t-- param1 is which spout\r\n\t-- param2 is on or off\r\n\t\r\n\tif ( msg.param1 == 1 ) then\r\n\t\r\n\t\tif ( msg.param2 == 1 ) then\r\n\t\t\t--print( \"-------------FOUNTAIN: DoSlashCommand, spout 1 on\" )\r\n\t\t\tSpout1Plugged( self )\r\n\t\telse\r\n\t\t\t--print( \"-------------FOUNTAIN: DoSlashCommand, spout 1 off\" )\r\n\t\t\tSpout1Unplugged( self )\r\n\t\tend\r\n\t\r\n\telseif ( msg.param1 == 2 ) then\r\n\t\r\n\t\tif ( msg.param2 == 1 ) then\r\n\t\t\t--print( \"-------------FOUNTAIN: DoSlashCommand, spout 2 on\" )\r\n\t\t\tSpout2Plugged( self )\r\n\t\telse\r\n\t\t\t--print( \"-------------FOUNTAIN: DoSlashCommand, spout 2 off\" )\r\n\t\t\tSpout2Unplugged( self )\r\n\t\tend\r\n\t\r\n\telse\r\n\t\tif ( msg.param2 == 1 ) then\r\n\t\t\t--print( \"-------------FOUNTAIN: DoSlashCommand, spout 3 on\" )\r\n\t\t\tSpout3Plugged( self )\r\n\t\telse\r\n\t\t\t--print( \"-------------FOUNTAIN: DoSlashCommand, spout 3 off\" )\r\n\t\t\tSpout3Unplugged( self )\r\n\t\tend\r\n\t\r\n\tend\r\n\r\nend\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction onFireEvent( self, msg )\r\n\t\r\n\tif ( msg.args == \"askSpout1State\" ) then\r\n\t\tAnswerSpout1State( self, msg )\r\n\t\t\r\n\telseif ( msg.args == \"askSpout2State\" ) then\r\n\t\tAnswerSpout2State( self, msg )\r\n\t\t\r\n\telseif ( msg.args == \"askSpout3State\" ) then\r\n\t\tAnswerSpout3State( self, msg )\r\n\t\t\r\n\tend\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction AnswerSpout1State( self )\r\n\r\n\t-- Spout 1's client-side script has just started up and wants to know what state the fountain is in\r\n\t\t-- so that it can set its water level accordinly.\r\n\t-- It sent a message to its server-side script, which has now asked the fountain.\r\n\t-- Tell it how high its water should be (via its server-side script).\r\n\t\r\n\t--print( \"-------------FOUNTAIN: AnswerSpout1State\" )\r\n\t\r\n\tlocal spout = GAMEOBJ:GetObjectByID( SPOUTS[1] )\r\n\tif ( spout == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\r\n\tlocal spoutsState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\t\r\n\tif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] ) then\r\n\t\tspout:NotifyObject{ name=\"normal\" }\r\n\t\r\n\telseif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_2\"]  or spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_3\"] ) then\r\n\t\tspout:NotifyObject{ name=\"increased\" }\r\n\t\r\n\telseif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] ) then\r\n\t\tspout:NotifyObject{ name=\"launchable\" }\r\n\t\t\r\n\telse\r\n\t\tspout:NotifyObject{ name=\"plugged\" }\r\n\tend\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction AnswerSpout2State( self )\r\n\r\n\t-- Spout 2's client-side script has just started up and wants to know what state the fountain is in\r\n\t\t-- so that it can set its water level accordinly.\r\n\t-- It sent a message to its server-side script, which has now asked the fountain.\r\n\t-- Tell it how high its water should be (via its server-side script).\r\n\t\r\n\t--print( \"-------------FOUNTAIN: AnswerSpout2State\" )\r\n\t\r\n\tlocal spout = GAMEOBJ:GetObjectByID( SPOUTS[2] )\r\n\tif ( spout == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\r\n\tlocal spoutsState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\t\r\n\tif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] ) then\r\n\t\tspout:NotifyObject{ name=\"normal\" }\r\n\t\r\n\telseif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_1\"]  or spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_3\"] ) then\r\n\t\tspout:NotifyObject{ name=\"increased\" }\r\n\t\r\n\telseif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] ) then\r\n\t\tspout:NotifyObject{ name=\"launchable\" }\r\n\t\t\r\n\telse\r\n\t\tspout:NotifyObject{ name=\"plugged\" }\r\n\tend\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction AnswerSpout3State( self )\r\n\r\n\t-- Spout 3's client-side script has just started up and wants to know what state the fountain is in\r\n\t\t-- so that it can set its water level accordinly.\r\n\t-- It sent a message to its server-side script, which has now asked the fountain.\r\n\t-- Tell it how high its water should be (via its server-side script).\r\n\t\r\n\t--print( \"-------------FOUNTAIN: AnswerSpout3State\" )\r\n\t\r\n\tlocal spout = GAMEOBJ:GetObjectByID( SPOUTS[3] )\r\n\tif ( spout == nil ) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\r\n\tlocal spoutsState = self:GetVar( \"eSpoutsState\" )\r\n\t\r\n\t\r\n\tif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] ) then\r\n\t\tspout:NotifyObject{ name=\"normal\" }\r\n\t\r\n\telseif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_1\"]  or spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_2\"] ) then\r\n\t\tspout:NotifyObject{ name=\"increased\" }\r\n\t\r\n\telseif ( spoutsState == CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] ) then\r\n\t\tspout:NotifyObject{ name=\"launchable\" }\r\n\t\t\r\n\telse\r\n\t\tspout:NotifyObject{ name=\"plugged\" }\r\n\tend\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction DeactivateSpouts( self )\r\n\r\n\t-- the skunk invasion is happening and the big base is coming up around the fountain\r\n\t-- turn off the effects and the functionality of the spouts\r\n\t\r\n\t--print( \"-------------FOUNTAIN: DeactivateSpouts\" )\r\n\t\r\n\t\r\n\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_DEACTIVATED\"] )\r\n\r\n\t\r\n\tfor spoutID = 1, CONSTANTS[\"NUM_SPOUTS\"] do\r\n\t\t\r\n\t\tlocal spout = GAMEOBJ:GetObjectByID(SPOUTS[spoutID])\r\n\t\t\r\n\t\tif ( spout ~= nil ) then\r\n\t\t\tspout:NotifyObject{ name = \"deactivate\" }\r\n\t\tend\r\n\t\t\r\n\tend\t\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction ReactivateSpouts( self )\r\n\r\n\t-- the skunk invasion just ended\r\n\t-- turn the effects and the functionality of the spouts back on\r\n\t\r\n\t--print( \"-------------FOUNTAIN: ReactivateSpouts\" )\r\n\t\r\n\r\n\tlocal spout1 = GAMEOBJ:GetObjectByID(SPOUTS[1])\r\n\tlocal spout2 = GAMEOBJ:GetObjectByID(SPOUTS[2])\r\n\tlocal spout3 = GAMEOBJ:GetObjectByID(SPOUTS[3])\r\n\t\r\n\tif ( spout1 == nil or spout2 == nil or spout3 == nil) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\t\r\n\t\r\n\t-- check the proximity objects of each spout to see if anyone is currently on it\r\n\tlocal bPlayerOn1 = DoesSpoutHaveAPlayer( self, 1 )\r\n\tlocal bPlayerOn2 = DoesSpoutHaveAPlayer( self, 2 )\r\n\tlocal bPlayerOn3 = DoesSpoutHaveAPlayer( self, 3 )\r\n\r\n\t\r\n\t-- set the spouts state based on which of the spouts were occupied\r\n\t-- and tel the spouts to set their effects / bouncer accordingly\r\n\tDetermineSpoutsState( self, bPlayerOn1, bPlayerOn2, bPlayerOn3 )\r\n\r\n\r\n\t\r\n\t-- tell the spouts to clear their deactivated flags\r\n\tfor spoutID = 1, CONSTANTS[\"NUM_SPOUTS\"] do\r\n\t\t\r\n\t\tlocal spout = GAMEOBJ:GetObjectByID(SPOUTS[spoutID])\r\n\t\t\r\n\t\tif ( spout ~= nil ) then\r\n\t\t\tspout:NotifyObject{ name = \"reactivate\" }\r\n\t\tend\r\n\t\t\r\n\tend\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\nfunction DoesSpoutHaveAPlayer( self, spoutIndex )\r\n\r\n\tif ( spoutIndex <= 0 or spoutIndex > CONSTANTS[\"NUM_SPOUTS\"] ) then\r\n\t\treturn false\r\n\tend\r\n\t\r\n\t\r\n\tlocal spout = GAMEOBJ:GetObjectByID(SPOUTS[spoutIndex])\r\n\tif ( spout == nil ) then\r\n\t\treturn\r\n\tend\t\r\n\t\r\n\t\r\n\t-- check this spout's proximity objects to see if anyone is currently on it\r\n\t\r\n\tlocal objs = spout:GetProximityObjects().objects\r\n\t\r\n\tlocal index = 1\r\n\twhile index <= table.getn(objs)  do\r\n\t\tlocal target = objs[index]\r\n\t\tlocal faction = target:GetFaction()\r\n\t\t\r\n\t\tif ( faction and faction.faction == 1 ) then\t-- it's a player\r\n\t\t\t\r\n\t\t\t--print( \"-------------FOUNTAIN: found a player at spout \" .. spoutIndex )\r\n\t\t\treturn true\r\n\t\tend\r\n\t\t\r\n\t\tindex = index + 1\r\n\tend\r\n\t\r\n\treturn false\r\n\t\r\nend\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction DetermineSpoutsState( self, bPlayerOn1, bPlayerOn2, bPlayerOn3 )\r\n\r\n\t-- we're turning the spouts back on because the skunk event ended\r\n\t-- we've already done a proximity check on each to see if there are any players on it\r\n\t-- set the spouts state accordingly, and tell each spout its water height\r\n\t\r\n\tlocal spout1 = GAMEOBJ:GetObjectByID(SPOUTS[1])\r\n\tlocal spout2 = GAMEOBJ:GetObjectByID(SPOUTS[2])\r\n\tlocal spout3 = GAMEOBJ:GetObjectByID(SPOUTS[3])\r\n\t\r\n\tif ( spout1 == nil or spout2 == nil or spout3 == nil) then\r\n\t\treturn\r\n\tend\r\n\t\r\n\t\r\n\t\r\n\tif ( bPlayerOn1 == false and \t\tbPlayerOn2 == false\tand\t \tbPlayerOn3 == false ) then\r\n\t\tspout1:NotifyObject{ name=\"normal\" }\r\n\t\tspout2:NotifyObject{ name=\"normal\" }\r\n\t\tspout3:NotifyObject{ name=\"normal\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_NONE\"] )\t\t\r\n\t\r\n\telseif ( bPlayerOn1 == true and\t\tbPlayerOn2 == false and \tbPlayerOn3 == false ) then\r\n\t\tspout1:NotifyObject{ name=\"plugged\" }\r\n\t\tspout2:NotifyObject{ name=\"increased\" }\r\n\t\tspout3:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1\"] )\r\n\r\n\telseif ( bPlayerOn1 == false and \tbPlayerOn2 == true and \t\tbPlayerOn3 == false ) then\r\n\t\tspout1:NotifyObject{ name=\"increased\" }\r\n\t\tspout2:NotifyObject{ name=\"plugged\" }\r\n\t\tspout3:NotifyObject{ name=\"increased\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_2\"] )\r\n\t\t\r\n\telseif ( bPlayerOn1 == false and \tbPlayerOn2 == false and \tbPlayerOn3 == true ) then\r\n\t\tspout1:NotifyObject{ name=\"increased\" }\r\n\t\tspout2:NotifyObject{ name=\"increased\" }\r\n\t\tspout3:NotifyObject{ name=\"plugged\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_3\"] )\r\n\t\t\r\n\telseif ( bPlayerOn1 == true and \tbPlayerOn2 == true and \t\tbPlayerOn3 == false ) then\r\n\t\tspout1:NotifyObject{ name=\"plugged\" }\r\n\t\tspout2:NotifyObject{ name=\"plugged\" }\r\n\t\tspout3:NotifyObject{ name=\"launchable\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1_AND_2\"] )\r\n\t\t\r\n\telseif ( bPlayerOn1 == true and \tbPlayerOn2 == false and \tbPlayerOn3 == true ) then\r\n\t\tspout1:NotifyObject{ name=\"plugged\" }\r\n\t\tspout2:NotifyObject{ name=\"launchable\" }\r\n\t\tspout3:NotifyObject{ name=\"plugged\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_1_AND_3\"] )\r\n\r\n\telseif ( bPlayerOn1 == false and \tbPlayerOn2 == true and \t\tbPlayerOn3 == true ) then\r\n\t\tspout1:NotifyObject{ name=\"launchable\" }\r\n\t\tspout2:NotifyObject{ name=\"plugged\" }\r\n\t\tspout3:NotifyObject{ name=\"plugged\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] )\r\n\t\t\r\n\t-- make a special case here in case there are people on all 3 spouts when the skunk invasion ends\r\n\t-- immediately bounce the player off one of them\r\n\telseif ( bPlayerOn1 == true and \tbPlayerOn2 == true and \t\tbPlayerOn3 == true ) then\r\n\t\tspout1:NotifyObject{ name=\"launchable\" }\r\n\t\tspout2:NotifyObject{ name=\"plugged\" }\r\n\t\tspout3:NotifyObject{ name=\"plugged\" }\r\n\t\tself:SetVar( \"eSpoutsState\", CONSTANTS[\"SPOUTS_PLUGGED_2_AND_3\"] )\r\n\r\n\tend\r\n\r\nend\r\n\r\n--]]"}]}