{"type":"Chunk","body":[{"type":"LocalStatement","variables":[{"type":"Identifier","name":"defaultProxRadius"}],"init":[{"type":"NumericLiteral","value":30,"raw":"30"}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"onStartup"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"},{"type":"Identifier","name":"msg"}],"body":[{"type":"LocalStatement","variables":[{"type":"Identifier","name":"proxRadius"}],"init":[{"type":"LogicalExpression","operator":"or","left":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"proxRadius","raw":"\"proxRadius\""}]},"right":{"type":"Identifier","name":"defaultProxRadius"}}]},{"type":"CallStatement","expression":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetProximityRadius"},"base":{"type":"Identifier","name":"self"}},"arguments":{"type":"TableConstructorExpression","fields":[{"type":"TableKeyString","key":{"type":"Identifier","name":"radius"},"value":{"type":"Identifier","name":"proxRadius"}}]}}}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"onProximityUpdate"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"},{"type":"Identifier","name":"msg"}],"body":[{"type":"LocalStatement","variables":[{"type":"Identifier","name":"player"}],"init":[{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetControlledID"},"base":{"type":"Identifier","name":"GAMEOBJ"}},"arguments":[]}]},{"type":"LocalStatement","variables":[{"type":"Identifier","name":"playerID"}],"init":[{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetID"},"base":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetControlledID"},"base":{"type":"Identifier","name":"GAMEOBJ"}},"arguments":[]}},"arguments":[]}]},{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"BinaryExpression","operator":"~=","left":{"type":"Identifier","name":"playerID"},"right":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetID"},"base":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"objId"},"base":{"type":"Identifier","name":"msg"}}},"arguments":[]}},"body":[{"type":"ReturnStatement","arguments":[]}]}]},{"type":"LocalStatement","variables":[{"type":"Identifier","name":"animTime"}],"init":[{"type":"NumericLiteral","value":0,"raw":"0"}]},{"type":"LocalStatement","variables":[{"type":"Identifier","name":"animName"}],"init":[{"type":"StringLiteral","value":"next","raw":"\"next\""}]},{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"BinaryExpression","operator":"==","left":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"status"},"base":{"type":"Identifier","name":"msg"}},"right":{"type":"StringLiteral","value":"ENTER","raw":"\"ENTER\""},"inParens":true},"body":[{"type":"CallStatement","expression":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"PlayAnimation"},"base":{"type":"Identifier","name":"self"}},"arguments":{"type":"TableConstructorExpression","fields":[{"type":"TableKeyString","key":{"type":"Identifier","name":"animationID"},"value":{"type":"StringLiteral","value":"next","raw":"\"next\""}},{"type":"TableKeyString","key":{"type":"Identifier","name":"bPlayImmediate"},"value":{"type":"BooleanLiteral","value":true,"raw":"true"}}]}}}]},{"type":"ElseifClause","condition":{"type":"BinaryExpression","operator":"==","left":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"status"},"base":{"type":"Identifier","name":"msg"}},"right":{"type":"StringLiteral","value":"LEAVE","raw":"\"LEAVE\""},"inParens":true},"body":[{"type":"AssignmentStatement","variables":[{"type":"Identifier","name":"animName"}],"init":[{"type":"StringLiteral","value":"back","raw":"\"back\""}]}]}]},{"type":"AssignmentStatement","variables":[{"type":"Identifier","name":"animTime"}],"init":[{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"time"},"base":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetAnimationTime"},"base":{"type":"Identifier","name":"self"}},"arguments":{"type":"TableConstructorExpression","fields":[{"type":"TableKeyString","key":{"type":"Identifier","name":"animationID"},"value":{"type":"Identifier","name":"animName"}}]}}}]},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"CancelAllTimers"},"base":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetTimer"},"base":{"type":"Identifier","name":"GAMEOBJ"}},"arguments":[]}},"arguments":[{"type":"Identifier","name":"self"}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"AddTimerWithCancel"},"base":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetTimer"},"base":{"type":"Identifier","name":"GAMEOBJ"}},"arguments":[]}},"arguments":[{"type":"Identifier","name":"animTime"},{"type":"Identifier","name":"animName"},{"type":"Identifier","name":"self"}]}}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"onTimerDone"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"},{"type":"Identifier","name":"msg"}],"body":[{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"BinaryExpression","operator":"==","left":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"name"},"base":{"type":"Identifier","name":"msg"}},"right":{"type":"StringLiteral","value":"back","raw":"\"back\""}},"body":[{"type":"CallStatement","expression":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"PlayAnimation"},"base":{"type":"Identifier","name":"self"}},"arguments":{"type":"TableConstructorExpression","fields":[{"type":"TableKeyString","key":{"type":"Identifier","name":"animationID"},"value":{"type":"StringLiteral","value":"Sign1","raw":"\"Sign1\""}},{"type":"TableKeyString","key":{"type":"Identifier","name":"bPlayImmediate"},"value":{"type":"BooleanLiteral","value":true,"raw":"true"}}]}}}]},{"type":"ElseifClause","condition":{"type":"BinaryExpression","operator":"==","left":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"name"},"base":{"type":"Identifier","name":"msg"}},"right":{"type":"StringLiteral","value":"next","raw":"\"next\""}},"body":[{"type":"CallStatement","expression":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"PlayAnimation"},"base":{"type":"Identifier","name":"self"}},"arguments":{"type":"TableConstructorExpression","fields":[{"type":"TableKeyString","key":{"type":"Identifier","name":"animationID"},"value":{"type":"StringLiteral","value":"Sign2","raw":"\"Sign2\""}},{"type":"TableKeyString","key":{"type":"Identifier","name":"bPlayImmediate"},"value":{"type":"BooleanLiteral","value":true,"raw":"true"}}]}}}]}]}]}],"comments":[{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" L_NS_DIRECTIONSIGNAGE_CLIENT.lua","raw":"-- L_NS_DIRECTIONSIGNAGE_CLIENT.lua"},{"type":"Comment","value":" Client side script for the NS location notification displays","raw":"-- Client side script for the NS location notification displays"},{"type":"Comment","value":" created abeechler ... 7/21/11","raw":"-- created abeechler ... 7/21/11"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" A stored default proximity value","raw":"-- A stored default proximity value"},{"type":"Comment","value":"--------------------------------------------------------------","raw":"----------------------------------------------------------------"},{"type":"Comment","value":" On object instantiation, process config data based ","raw":"-- On object instantiation, process config data based "},{"type":"Comment","value":" proximity sensing","raw":"-- proximity sensing"},{"type":"Comment","value":"--------------------------------------------------------------","raw":"----------------------------------------------------------------"},{"type":"Comment","value":" Set up the proximity radius","raw":"-- Set up the proximity radius"},{"type":"Comment","value":"--------------------------------------------------------------","raw":"----------------------------------------------------------------"},{"type":"Comment","value":" Catch distance based notification events","raw":"-- Catch distance based notification events"},{"type":"Comment","value":"--------------------------------------------------------------","raw":"----------------------------------------------------------------"},{"type":"Comment","value":" Get a reference to the local player","raw":"-- Get a reference to the local player"},{"type":"Comment","value":" Check to see if we are the correct player","raw":"-- Check to see if we are the correct player"},{"type":"Comment","value":" Pick the correct animation based on message status","raw":"-- Pick the correct animation based on message status"},{"type":"Comment","value":" Get the animation time based on animName","raw":"-- Get the animation time based on animName"},{"type":"Comment","value":" Cancel all timers and start one based on animName and animTime","raw":"-- Cancel all timers and start one based on animName and animTime"},{"type":"Comment","value":"--------------------------------------------------------------","raw":"----------------------------------------------------------------"},{"type":"Comment","value":" Catch timer events for sign animation processing","raw":"-- Catch timer events for sign animation processing"},{"type":"Comment","value":"--------------------------------------------------------------","raw":"----------------------------------------------------------------"},{"type":"Comment","value":" Play the correct idle animation","raw":"-- Play the correct idle animation"}]}