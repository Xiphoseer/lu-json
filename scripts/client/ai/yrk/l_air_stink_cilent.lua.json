{"type":"Chunk","body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"require"},"arguments":[{"type":"StringLiteral","value":"o_mis","raw":"'o_mis'"}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"require"},"arguments":[{"type":"StringLiteral","value":"c_Zorillo","raw":"'c_Zorillo'"}]}},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"GetZoneState"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"}],"body":[{"type":"ReturnStatement","arguments":[{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"ZoneState","raw":"\"ZoneState\""}]}]}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"SetZoneState"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"},{"type":"Identifier","name":"state"}],"body":[{"type":"LocalStatement","variables":[{"type":"Identifier","name":"prevState"}],"init":[{"type":"CallExpression","base":{"type":"Identifier","name":"GetZoneState"},"arguments":[{"type":"Identifier","name":"self"}]}]},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"ZoneState","raw":"\"ZoneState\""},{"type":"Identifier","name":"state"}]}},{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"LogicalExpression","operator":"and","left":{"type":"Identifier","name":"prevState"},"right":{"type":"BinaryExpression","operator":"~=","left":{"type":"Identifier","name":"prevState"},"right":{"type":"Identifier","name":"state"}},"inParens":true},"body":[{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"LogicalExpression","operator":"or","left":{"type":"BinaryExpression","operator":"==","left":{"type":"Identifier","name":"state"},"right":{"type":"IndexExpression","base":{"type":"Identifier","name":"CONSTANTS"},"index":{"type":"StringLiteral","value":"ZONE_STATE_NO_INVASION","raw":"\"ZONE_STATE_NO_INVASION\""}}},"right":{"type":"BinaryExpression","operator":"==","left":{"type":"Identifier","name":"state"},"right":{"type":"IndexExpression","base":{"type":"Identifier","name":"CONSTANTS"},"index":{"type":"StringLiteral","value":"ZONE_STATE_TRANSITION","raw":"\"ZONE_STATE_TRANSITION\""}}},"inParens":true},"body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"RemoveEffect"},"arguments":[{"type":"Identifier","name":"self"}]}}]},{"type":"ElseClause","body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"EnableEffect"},"arguments":[{"type":"Identifier","name":"self"},{"type":"StringLiteral","value":"add","raw":"\"add\""}]}}]}]}]}]}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"EffectExists"},"isLocal":false,"parameters":[{"type":"Identifier","name":"effect"}],"body":[{"type":"ReturnStatement","arguments":[{"type":"LogicalExpression","operator":"and","left":{"type":"Identifier","name":"effect"},"right":{"type":"BinaryExpression","operator":"~=","left":{"type":"CallExpression","base":{"type":"Identifier","name":"tostring"},"arguments":[{"type":"Identifier","name":"effect"}]},"right":{"type":"CallExpression","base":{"type":"Identifier","name":"tostring"},"arguments":[{"type":"IndexExpression","base":{"type":"Identifier","name":"CONSTANTS"},"index":{"type":"StringLiteral","value":"NO_OBJECT","raw":"\"NO_OBJECT\""}}]}},"inParens":true}]}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"EnableEffect"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"},{"type":"Identifier","name":"name"}],"body":[{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"BinaryExpression","operator":"==","left":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"bRenderReady","raw":"\"bRenderReady\""}]},"right":{"type":"BooleanLiteral","value":false,"raw":"false"},"inParens":true},"body":[{"type":"ReturnStatement","arguments":[]}]}]},{"type":"LocalStatement","variables":[{"type":"Identifier","name":"myEffect"}],"init":[{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"currentEffect","raw":"\"currentEffect\""}]}]},{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"Identifier","name":"myEffect","inParens":true},"body":[{"type":"ReturnStatement","arguments":[]}]}]},{"type":"CallStatement","expression":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"PlayFXEffect"},"base":{"type":"Identifier","name":"self"}},"arguments":{"type":"TableConstructorExpression","fields":[{"type":"TableKeyString","key":{"type":"Identifier","name":"name"},"value":{"type":"StringLiteral","value":"stink","raw":"\"stink\""}},{"type":"TableKeyString","key":{"type":"Identifier","name":"effectType"},"value":{"type":"Identifier","name":"name"}}]}}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"currentEffect","raw":"\"currentEffect\""},{"type":"BooleanLiteral","value":true,"raw":"true"}]}}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"RemoveEffect"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"}],"body":[{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"BinaryExpression","operator":"==","left":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"bRenderReady","raw":"\"bRenderReady\""}]},"right":{"type":"BooleanLiteral","value":false,"raw":"false"},"inParens":true},"body":[{"type":"ReturnStatement","arguments":[]}]}]},{"type":"LocalStatement","variables":[{"type":"Identifier","name":"myEffect"}],"init":[{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"currentEffect","raw":"\"currentEffect\""}]}]},{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"CallExpression","base":{"type":"Identifier","name":"EffectExists"},"arguments":[{"type":"Identifier","name":"myEffect"}],"inParens":true},"body":[{"type":"CallStatement","expression":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"StopFXEffect"},"base":{"type":"Identifier","name":"self"}},"arguments":{"type":"TableConstructorExpression","fields":[{"type":"TableKeyString","key":{"type":"Identifier","name":"name"},"value":{"type":"StringLiteral","value":"stink","raw":"\"stink\""}}]}}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"currentEffect","raw":"\"currentEffect\""},{"type":"BooleanLiteral","value":false,"raw":"false"}]}}]}]}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"onRenderComponentReady"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"},{"type":"Identifier","name":"msg"}],"body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"bRenderReady","raw":"\"bRenderReady\""},{"type":"BooleanLiteral","value":true,"raw":"true"}]}},{"type":"CallStatement","expression":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"FireEvent"},"base":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetZoneControlID"},"base":{"type":"Identifier","name":"GAMEOBJ"}},"arguments":[]}},"arguments":{"type":"TableConstructorExpression","fields":[{"type":"TableKeyString","key":{"type":"Identifier","name":"senderID"},"value":{"type":"Identifier","name":"self"}},{"type":"TableKeyString","key":{"type":"Identifier","name":"args"},"value":{"type":"StringLiteral","value":"ZoneStateClientObjectReady","raw":"\"ZoneStateClientObjectReady\""}}]}}},{"type":"CallStatement","expression":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVisible"},"base":{"type":"Identifier","name":"self"}},"arguments":{"type":"TableConstructorExpression","fields":[{"type":"TableKeyString","key":{"type":"Identifier","name":"visible"},"value":{"type":"BooleanLiteral","value":false,"raw":"false"}},{"type":"TableKeyString","key":{"type":"Identifier","name":"fadeTime"},"value":{"type":"NumericLiteral","value":0,"raw":"0.0"}}]}}}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"onStartup"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"}],"body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"registerWithZoneControlObject"},"arguments":[{"type":"Identifier","name":"self"}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"currentEffect","raw":"\"currentEffect\""},{"type":"IndexExpression","base":{"type":"Identifier","name":"CONSTANTS"},"index":{"type":"StringLiteral","value":"NO_OBJECT","raw":"\"NO_OBJECT\""}}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"SetZoneState"},"arguments":[{"type":"Identifier","name":"self"},{"type":"IndexExpression","base":{"type":"Identifier","name":"CONSTANTS"},"index":{"type":"StringLiteral","value":"ZONE_STATE_NO_INFO","raw":"\"ZONE_STATE_NO_INFO\""}}]}}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"onNotifyObject"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"},{"type":"Identifier","name":"msg"}],"body":[{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"BinaryExpression","operator":"==","left":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"name"},"base":{"type":"Identifier","name":"msg"}},"right":{"type":"StringLiteral","value":"zone_state_change","raw":"\"zone_state_change\""},"inParens":true},"body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"SetZoneState"},"arguments":[{"type":"Identifier","name":"self"},{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"param1"},"base":{"type":"Identifier","name":"msg"}}]}}]}]}]}],"comments":[{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" Client script for air stink. Handles its effect","raw":"-- Client script for air stink. Handles its effect"},{"type":"Comment","value":" based on the state of the zone","raw":"-- based on the state of the zone"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" Includes","raw":"-- Includes"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" Constants","raw":"-- Constants"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" for testing state switch only","raw":"-- for testing state switch only"},{"type":"Comment","value":"CONSTANTS[\"TEST_TIME\"] = 10","raw":"--CONSTANTS[\"TEST_TIME\"] = 10"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" Get the state of the zone","raw":"-- Get the state of the zone"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" Set the state of the zone","raw":"-- Set the state of the zone"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" get current state","raw":"-- get current state"},{"type":"Comment","value":" perform actions based on zone state","raw":"-- perform actions based on zone state"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" does the effect exist","raw":"-- does the effect exist"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" Enables an effect on the spout unless one is already present","raw":"-- Enables an effect on the spout unless one is already present"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" return early if render is not ready","raw":"-- return early if render is not ready"},{"type":"Comment","value":" return out if we already have an effect","raw":"-- return out if we already have an effect"},{"type":"Comment","value":" make a new effect","raw":"-- make a new effect"},{"type":"Comment","value":" save the effect","raw":"-- save the effect"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" Removes the effect","raw":"-- Removes the effect"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" return early if render is not ready","raw":"-- return early if render is not ready"},{"type":"Comment","value":" get current effect","raw":"-- get current effect"},{"type":"Comment","value":" remove the effect","raw":"-- remove the effect"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" Called when the render is ready on the client","raw":"-- Called when the render is ready on the client"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" let the zone control object know we are ready to be instructed","raw":"-- let the zone control object know we are ready to be instructed"},{"type":"Comment","value":" instantly hide the render object, we only care to see the effect","raw":"-- instantly hide the render object, we only care to see the effect"},{"type":"Comment","value":" TEST ONLY -- ","raw":"-- TEST ONLY -- "},{"type":"Comment","value":"GAMEOBJ:GetTimer():AddTimerWithCancel(CONSTANTS[\"TEST_TIME\"], \"testNoInvasion\", self )","raw":"--GAMEOBJ:GetTimer():AddTimerWithCancel(CONSTANTS[\"TEST_TIME\"], \"testNoInvasion\", self )"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" Called when object is added to world","raw":"-- Called when object is added to world"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" register ourself with the client-side zone script to be instructed later","raw":"-- register ourself with the client-side zone script to be instructed later"},{"type":"Comment","value":" set state to No Info, waiting for state information","raw":"-- set state to No Info, waiting for state information"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" Called when object gets a notification","raw":"-- Called when object gets a notification"},{"type":"Comment","value":"------------------------------------------------------------","raw":"--------------------------------------------------------------"},{"type":"Comment","value":" set the state","raw":"-- set the state"},{"type":"Comment","value":"--------------------------------------------------------------\r\n-- called when timers expire\r\n--------------------------------------------------------------\r\nfunction onTimerDone(self, msg)\r\n\r\n    print (\"Timer name: \"..msg.name)\r\n    \r\n    local time = CONSTANTS[\"TEST_TIME\"]\r\n\r\n\tif ( msg.name == \"testNoInvasion\" ) then\r\n\t\tSetZoneState(self, CONSTANTS[\"ZONE_STATE_NO_INVASION\"])\r\n\t\tGAMEOBJ:GetTimer():AddTimerWithCancel(time, \"testTransition\", self )\r\n\t\r\n\telseif ( msg.name == \"testTransition\" ) then\r\n\t\tSetZoneState(self, CONSTANTS[\"ZONE_STATE_TRANSITION\"])\r\n\t\tGAMEOBJ:GetTimer():AddTimerWithCancel(time, \"testHigh\", self )\r\n\t\r\n\telseif ( msg.name == \"testHigh\" ) then\r\n\t\tSetZoneState(self, CONSTANTS[\"ZONE_STATE_HIGH_ALERT\"])\r\n\t\tGAMEOBJ:GetTimer():AddTimerWithCancel(time, \"testMedium\", self )\r\n\t\r\n\telseif ( msg.name == \"testMedium\" ) then\r\n\t\tSetZoneState(self, CONSTANTS[\"ZONE_STATE_MEDIUM_ALERT\"])\r\n\t\tGAMEOBJ:GetTimer():AddTimerWithCancel(time, \"testLow\", self )\r\n\t\r\n\telseif ( msg.name == \"testLow\" ) then\r\n\t\tSetZoneState(self, CONSTANTS[\"ZONE_STATE_LOW_ALERT\"])\r\n\t\tGAMEOBJ:GetTimer():AddTimerWithCancel(time, \"testDone\", self )\r\n\t\r\n\telseif ( msg.name == \"testDone\" ) then\r\n\t\tSetZoneState(self, CONSTANTS[\"ZONE_STATE_DONE_TRANSITION\"])\r\n\t\tGAMEOBJ:GetTimer():AddTimerWithCancel(time, \"testNoInvasion\", self )\r\n\t\r\n\tend\r\n\t\r\nend\r\n\r\n","raw":"--[[\r\n--------------------------------------------------------------\r\n-- called when timers expire\r\n--------------------------------------------------------------\r\nfunction onTimerDone(self, msg)\r\n\r\n    print (\"Timer name: \"..msg.name)\r\n    \r\n    local time = CONSTANTS[\"TEST_TIME\"]\r\n\r\n\tif ( msg.name == \"testNoInvasion\" ) then\r\n\t\tSetZoneState(self, CONSTANTS[\"ZONE_STATE_NO_INVASION\"])\r\n\t\tGAMEOBJ:GetTimer():AddTimerWithCancel(time, \"testTransition\", self )\r\n\t\r\n\telseif ( msg.name == \"testTransition\" ) then\r\n\t\tSetZoneState(self, CONSTANTS[\"ZONE_STATE_TRANSITION\"])\r\n\t\tGAMEOBJ:GetTimer():AddTimerWithCancel(time, \"testHigh\", self )\r\n\t\r\n\telseif ( msg.name == \"testHigh\" ) then\r\n\t\tSetZoneState(self, CONSTANTS[\"ZONE_STATE_HIGH_ALERT\"])\r\n\t\tGAMEOBJ:GetTimer():AddTimerWithCancel(time, \"testMedium\", self )\r\n\t\r\n\telseif ( msg.name == \"testMedium\" ) then\r\n\t\tSetZoneState(self, CONSTANTS[\"ZONE_STATE_MEDIUM_ALERT\"])\r\n\t\tGAMEOBJ:GetTimer():AddTimerWithCancel(time, \"testLow\", self )\r\n\t\r\n\telseif ( msg.name == \"testLow\" ) then\r\n\t\tSetZoneState(self, CONSTANTS[\"ZONE_STATE_LOW_ALERT\"])\r\n\t\tGAMEOBJ:GetTimer():AddTimerWithCancel(time, \"testDone\", self )\r\n\t\r\n\telseif ( msg.name == \"testDone\" ) then\r\n\t\tSetZoneState(self, CONSTANTS[\"ZONE_STATE_DONE_TRANSITION\"])\r\n\t\tGAMEOBJ:GetTimer():AddTimerWithCancel(time, \"testNoInvasion\", self )\r\n\t\r\n\tend\r\n\t\r\nend\r\n\r\n]]"},{"type":"Comment","value":"","raw":"--"}]}