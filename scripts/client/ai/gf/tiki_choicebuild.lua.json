{"type":"Chunk","body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"require"},"arguments":[{"type":"StringLiteral","value":"o_mis","raw":"'o_mis'"}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"require"},"arguments":[{"type":"StringLiteral","value":"c_GnarledForest","raw":"'c_GnarledForest'"}]}},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"onGetOverridePickType"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"},{"type":"Identifier","name":"msg"}],"body":[{"type":"AssignmentStatement","variables":[{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"ePickType"},"base":{"type":"Identifier","name":"msg"}}],"init":[{"type":"NumericLiteral","value":14,"raw":"14"}]},{"type":"ReturnStatement","arguments":[{"type":"Identifier","name":"msg"}]}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"onClientUse"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"},{"type":"Identifier","name":"msg"}],"body":[{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"BinaryExpression","operator":">","left":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"imagination"},"base":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetImagination"},"base":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"user"},"base":{"type":"Identifier","name":"msg"}}},"arguments":{"type":"TableConstructorExpression","fields":[]}}},"right":{"type":"NumericLiteral","value":0,"raw":"0"}},"body":[{"type":"LocalStatement","variables":[{"type":"Identifier","name":"ournum"}],"init":[{"type":"NumericLiteral","value":1,"raw":"1"}]},{"type":"LocalStatement","variables":[{"type":"Identifier","name":"slot"}],"init":[{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"ourslot","raw":"\"ourslot\""}]}]},{"type":"ForNumericStatement","variable":{"type":"Identifier","name":"i"},"start":{"type":"NumericLiteral","value":1,"raw":"1"},"end":{"type":"UnaryExpression","operator":"#","argument":{"type":"IndexExpression","base":{"type":"Identifier","name":"LOT_NUMS"},"index":{"type":"Identifier","name":"slot"}}},"step":null,"body":[{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"BinaryExpression","operator":"~=","left":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"ourlotnum","raw":"\"ourlotnum\""}]},"right":{"type":"IndexExpression","base":{"type":"IndexExpression","base":{"type":"Identifier","name":"LOT_NUMS"},"index":{"type":"Identifier","name":"slot"}},"index":{"type":"Identifier","name":"i"}},"inParens":true},"body":[{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"BinaryExpression","operator":"==","left":{"type":"Identifier","name":"ournum"},"right":{"type":"NumericLiteral","value":1,"raw":"1"},"inParens":true},"body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"lot1","raw":"\"lot1\""},{"type":"IndexExpression","base":{"type":"IndexExpression","base":{"type":"Identifier","name":"LOT_NUMS"},"index":{"type":"Identifier","name":"slot"}},"index":{"type":"Identifier","name":"i"}}]}}]},{"type":"ElseifClause","condition":{"type":"BinaryExpression","operator":"==","left":{"type":"Identifier","name":"ournum"},"right":{"type":"NumericLiteral","value":2,"raw":"2"},"inParens":true},"body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"lot2","raw":"\"lot2\""},{"type":"IndexExpression","base":{"type":"IndexExpression","base":{"type":"Identifier","name":"LOT_NUMS"},"index":{"type":"Identifier","name":"slot"}},"index":{"type":"Identifier","name":"i"}}]}}]},{"type":"ElseifClause","condition":{"type":"BinaryExpression","operator":"==","left":{"type":"Identifier","name":"ournum"},"right":{"type":"NumericLiteral","value":3,"raw":"3"},"inParens":true},"body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"lot3","raw":"\"lot3\""},{"type":"IndexExpression","base":{"type":"IndexExpression","base":{"type":"Identifier","name":"LOT_NUMS"},"index":{"type":"Identifier","name":"slot"}},"index":{"type":"Identifier","name":"i"}}]}}]}]},{"type":"AssignmentStatement","variables":[{"type":"Identifier","name":"ournum"}],"init":[{"type":"BinaryExpression","operator":"+","left":{"type":"Identifier","name":"ournum"},"right":{"type":"NumericLiteral","value":1,"raw":"1"}}]}]}]}]},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"print"},"arguments":[{"type":"StringLiteral","value":"in onclientuse","raw":"\"in onclientuse\""}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"DisplayTripleBuild"},"base":{"type":"Identifier","name":"UI"}},"arguments":[{"type":"Identifier","name":"self"},{"type":"BooleanLiteral","value":true,"raw":"true"},{"type":"TableConstructorExpression","fields":[{"type":"TableValue","value":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"lot1","raw":"\"lot1\""}]}},{"type":"TableValue","value":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"lot2","raw":"\"lot2\""}]}},{"type":"TableValue","value":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"lot3","raw":"\"lot3\""}]}}]}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"print"},"arguments":[{"type":"BinaryExpression","operator":"..","left":{"type":"CallExpression","base":{"type":"Identifier","name":"tostring"},"arguments":[{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"lot1","raw":"\"lot1\""}]}]},"right":{"type":"BinaryExpression","operator":"..","left":{"type":"CallExpression","base":{"type":"Identifier","name":"tostring"},"arguments":[{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"lot2","raw":"\"lot2\""}]}]},"right":{"type":"CallExpression","base":{"type":"Identifier","name":"tostring"},"arguments":[{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"lot3","raw":"\"lot3\""}]}]}}}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"print"},"arguments":[{"type":"StringLiteral","value":"Displaying UI - -- ---- -------------------------------------","raw":"\"Displaying UI - -- ---- -------------------------------------\""}]}}]},{"type":"ElseClause","body":[{"type":"CallStatement","expression":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"DisplayTooltip"},"base":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"user"},"base":{"type":"Identifier","name":"msg"}}},"arguments":{"type":"TableConstructorExpression","fields":[{"type":"TableKeyString","key":{"type":"Identifier","name":"bShow"},"value":{"type":"BooleanLiteral","value":true,"raw":"true"}},{"type":"TableKeyString","key":{"type":"Identifier","name":"strText"},"value":{"type":"CallExpression","base":{"type":"Identifier","name":"Localize"},"arguments":[{"type":"StringLiteral","value":"AG_TOOLTIP_CON_IMAGINATION","raw":"\"AG_TOOLTIP_CON_IMAGINATION\""}]}},{"type":"TableKeyString","key":{"type":"Identifier","name":"iTime"},"value":{"type":"NumericLiteral","value":5000,"raw":"5000"}}]}}}]}]}]}],"comments":[{"type":"Comment","value":"-------------------------------------------------------------------------------------------------------","raw":"---------------------------------------------------------------------------------------------------------"},{"type":"Comment","value":" Client-side script for Concert Props Choice Builds. Each prop can be built into 1 of 4 types.","raw":"-- Client-side script for Concert Props Choice Builds. Each prop can be built into 1 of 4 types."},{"type":"Comment","value":" If all 4 are built into the same thing, the Stage transforms, and 30 seconds later they all return to their \"default\" state (the object's render component)","raw":"-- If all 4 are built into the same thing, the Stage transforms, and 30 seconds later they all return to their \"default\" state (the object's render component)"},{"type":"Comment","value":" Based on scripts\\client\\ai\\YRK\\L_TB_BENCH.lua","raw":"-- Based on scripts\\client\\ai\\YRK\\L_TB_BENCH.lua"},{"type":"Comment","value":" 5023 AG - Stage Rocket               OLD 4029 AG � Fog Machine Choice Build","raw":"-- 5023 AG - Stage Rocket               OLD 4029 AG � Fog Machine Choice Build"},{"type":"Comment","value":" 4891 AG - Stage Spot Light           OLD 4030 AG � Spotlight Choice Build\t","raw":"-- 4891 AG - Stage Spot Light           OLD 4030 AG � Spotlight Choice Build\t"},{"type":"Comment","value":" 5024 AG - Stage laser                OLD 4031 AG � Laser Light Choice Build\t","raw":"-- 5024 AG - Stage laser                OLD 4031 AG � Laser Light Choice Build\t"},{"type":"Comment","value":" 4858 AG - Speaker                    OLD 4032 AG � Speaker Choice Build","raw":"-- 4858 AG - Speaker                    OLD 4032 AG � Speaker Choice Build"},{"type":"Comment","value":" Destructible component 348","raw":"-- Destructible component 348"},{"type":"Comment","value":"-------------------------------------------------------------------------------------------------------","raw":"---------------------------------------------------------------------------------------------------------"},{"type":"Comment","value":" All the lot nums for the prop choicebuilds","raw":"-- All the lot nums for the prop choicebuilds"},{"type":"Comment","value":"make sure we have enough imagination","raw":"--make sure we have enough imagination"},{"type":"Comment","value":" Send every LOT number that isn't us","raw":"-- Send every LOT number that isn't us"},{"type":"Comment","value":" Store all the lots nums that arent us","raw":"-- Store all the lots nums that arent us"},{"type":"Comment","value":" TODO This should be in a table so that it would be dynamic, but not sure how to store one with SetVar yet","raw":"-- TODO This should be in a table so that it would be dynamic, but not sure how to store one with SetVar yet"},{"type":"Comment","value":"local nextLot = #OUR_LOTNUMS + 1","raw":"--local nextLot = #OUR_LOTNUMS + 1"},{"type":"Comment","value":"OUR_LOTNUMS[nextLot] = LOT_NUMS[i]","raw":"--OUR_LOTNUMS[nextLot] = LOT_NUMS[i]"},{"type":"Comment","value":"UI:DisplayTripleBuild( self, true, { OUR_LOTNUMS[1], OUR_LOTNUMS[2], OUR_LOTNUMS[3] } )","raw":"--UI:DisplayTripleBuild( self, true, { OUR_LOTNUMS[1], OUR_LOTNUMS[2], OUR_LOTNUMS[3] } )"},{"type":"Comment","value":"display tooltip","raw":"--display tooltip"},{"type":"Comment","value":"function onStartup(self)\r\n\t-- Save our LOT number\r\n    self:SetVar(\"ourlotnum\", self:GetLOT{}.objtemplate)\r\n\tfor i = 1, #LOT_NUMS do\r\n\t\tfor a = 1, #LOT_NUMS[i] do\r\n\t\t\tif(self:GetVar(\"ourlotnum\") == LOT_NUMS[i][a]) then\r\n\t\t\t\tself:SetVar(\"ourslot\", i)\r\n\t\t\t\treturn\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\nend\r\n","raw":"--[[\r\nfunction onStartup(self)\r\n\t-- Save our LOT number\r\n    self:SetVar(\"ourlotnum\", self:GetLOT{}.objtemplate)\r\n\tfor i = 1, #LOT_NUMS do\r\n\t\tfor a = 1, #LOT_NUMS[i] do\r\n\t\t\tif(self:GetVar(\"ourlotnum\") == LOT_NUMS[i][a]) then\r\n\t\t\t\tself:SetVar(\"ourslot\", i)\r\n\t\t\t\treturn\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\nend\r\n]]"},{"type":"Comment","value":"","raw":"--"}]}