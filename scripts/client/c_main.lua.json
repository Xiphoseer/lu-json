{"type":"Chunk","body":[{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"LoadVenderVarsOnce"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"}],"body":[]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"GetVenderVars"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"}],"body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"ConductCoolDown","raw":"\"ConductCoolDown\""},{"type":"BooleanLiteral","value":false,"raw":"false"}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"ConductTimer_Started","raw":"\"ConductTimer_Started\""},{"type":"BooleanLiteral","value":false,"raw":"false"}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"Emote_onExitBuyActive","raw":"\"Emote_onExitBuyActive\""},{"type":"BooleanLiteral","value":false,"raw":"false"}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"Vendor_BuyCount","raw":"\"Vendor_BuyCount\""},{"type":"NumericLiteral","value":0,"raw":"0"}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"Vendor_SellCount","raw":"\"Vendor_SellCount\""},{"type":"NumericLiteral","value":0,"raw":"0"}]}}]},{"type":"FunctionDeclaration","identifier":{"type":"Identifier","name":"CreateVenderStates"},"isLocal":false,"parameters":[{"type":"Identifier","name":"self"}],"body":[{"type":"IfStatement","clauses":[{"type":"IfClause","condition":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"Ven.OverRideConduct","raw":"'Ven.OverRideConduct'"}]},"body":[{"type":"CallStatement","expression":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"SetProximityRadius"},"base":{"type":"Identifier","name":"self"}},"arguments":{"type":"TableConstructorExpression","fields":[{"type":"TableKeyString","key":{"type":"Identifier","name":"radius"},"value":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetVar"},"base":{"type":"Identifier","name":"self"}},"arguments":[{"type":"StringLiteral","value":"Ven.conductRadius","raw":"\"Ven.conductRadius\""}]}},{"type":"TableKeyString","key":{"type":"Identifier","name":"name"},"value":{"type":"StringLiteral","value":"conductRadius","raw":"\"conductRadius\""}}]}}}]}]},{"type":"CallStatement","expression":{"type":"TableCallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"UseStateMachine"},"base":{"type":"Identifier","name":"self"}},"arguments":{"type":"TableConstructorExpression","fields":[]}}},{"type":"AssignmentStatement","variables":[{"type":"Identifier","name":"VenderIdle"}],"init":[{"type":"CallExpression","base":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"create"},"base":{"type":"Identifier","name":"State"}},"arguments":[]}]},{"type":"AssignmentStatement","variables":[{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"onEnter"},"base":{"type":"Identifier","name":"VenderIdle"}}],"init":[{"type":"FunctionDeclaration","identifier":null,"isLocal":false,"parameters":[{"type":"Identifier","name":"self"}],"body":[]}]},{"type":"AssignmentStatement","variables":[{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"onArrived"},"base":{"type":"Identifier","name":"VenderIdle"}}],"init":[{"type":"FunctionDeclaration","identifier":null,"isLocal":false,"parameters":[{"type":"Identifier","name":"self"}],"body":[]}]},{"type":"AssignmentStatement","variables":[{"type":"Identifier","name":"VenderEmote"}],"init":[{"type":"CallExpression","base":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"create"},"base":{"type":"Identifier","name":"State"}},"arguments":[]}]},{"type":"AssignmentStatement","variables":[{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"onEnter"},"base":{"type":"Identifier","name":"VenderEmote"}}],"init":[{"type":"FunctionDeclaration","identifier":null,"isLocal":false,"parameters":[{"type":"Identifier","name":"self"}],"body":[{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"AddTimerWithCancel"},"base":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":":","identifier":{"type":"Identifier","name":"GetTimer"},"base":{"type":"Identifier","name":"GAMEOBJ"}},"arguments":[]}},"arguments":[{"type":"NumericLiteral","value":5,"raw":"5"},{"type":"StringLiteral","value":"BreakPlayEmote","raw":"\"BreakPlayEmote\""},{"type":"Identifier","name":"self"}]}}]}]},{"type":"AssignmentStatement","variables":[{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"onArrived"},"base":{"type":"Identifier","name":"VenderEmote"}}],"init":[{"type":"FunctionDeclaration","identifier":null,"isLocal":false,"parameters":[{"type":"Identifier","name":"self"}],"body":[]}]},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"addState"},"arguments":[{"type":"Identifier","name":"VenderIdle"},{"type":"StringLiteral","value":"VenderIdle","raw":"\"VenderIdle\""},{"type":"StringLiteral","value":"VenderIdle","raw":"\"VenderIdle\""},{"type":"Identifier","name":"self"}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"addState"},"arguments":[{"type":"Identifier","name":"VenderEmote"},{"type":"StringLiteral","value":"VenderEmote","raw":"\"VenderEmote\""},{"type":"StringLiteral","value":"VenderEmote","raw":"\"VenderEmote\""},{"type":"Identifier","name":"self"}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"Identifier","name":"beginStateMachine"},"arguments":[{"type":"StringLiteral","value":"VenderIdle","raw":"\"VenderIdle\""},{"type":"Identifier","name":"self"}]}},{"type":"CallStatement","expression":{"type":"CallExpression","base":{"type":"MemberExpression","indexer":".","identifier":{"type":"Identifier","name":"onEnter"},"base":{"type":"Identifier","name":"VenderIdle"}},"arguments":[{"type":"Identifier","name":"self"}]}}]}],"comments":[{"type":"Comment","value":" Load Once","raw":"-- Load Once"},{"type":"Comment","value":" Saved Vars","raw":"-- Saved Vars"},{"type":"Comment","value":" Idle State","raw":"-- Idle State"},{"type":"Comment","value":"","raw":"--"},{"type":"Comment","value":" Emote State","raw":"-- Emote State"},{"type":"Comment","value":" self:FaceTarget{ target = myTarget, degreesOff = 5, keepFacingTarget = true }","raw":"-- self:FaceTarget{ target = myTarget, degreesOff = 5, keepFacingTarget = true }"},{"type":"Comment","value":"     Emote.emote(self, getMyVendorTarget(self), self:GetVar(\"Ven.Emote_enterType\") ) ","raw":"--     Emote.emote(self, getMyVendorTarget(self), self:GetVar(\"Ven.Emote_enterType\") ) "},{"type":"Comment","value":" function onProximityUpdate(self, msg)\r\n \r\n           \r\n    if msg.objType == \"Enemies\" or msg.objType == \"NPC\" then\r\n--//////////////////////////////////////////////////////////////////////////////////\r\n--//////////////////////////////////////////////////////////////////////////////////\r\n--//////////////////////////////////////////////////////////////////////////////////\r\n--//////////////////////////////////////////////////////////////////////////////////\r\n\r\n        if  msg.name == \"conductRadius\" and msg.status == \"ENTER\" then\r\n      \r\n                storeVendorTarget(self, msg.objId)\r\n                SetVendorEmote(self, self:GetVar(\"Ven.Emote_enterType\"))\r\n                setState(\"VenderEmote\",self)\r\n              \r\n            end\r\n        end\r\n        if  msg.name == \"conductRadius\" and msg.status == \"LEAVE\" and not self:GetVar(\"ExitConductTimer_Started\")then\r\n        \r\n                 storeVendorTarget(self, msg.objId)\r\n                if self:GetVar(\"Vendor_SellCount\") ~= 0 or  self:GetVar(\"Vendor_BuyCount\") ~= 0 then\r\n                    SetVendorEmote(self, self:GetVar(\"Ven.Emote_onExitBuySell\"))\r\n                    setState(\"VenderEmote\",self)\r\n                else\r\n                    SetVendorEmote(self, self:GetVar(\"Ven.Emote_onExitType\"))\r\n                    setState(\"VenderEmote\",self)\r\n                end\r\n                     self:SetVar(\"Vendor_BuyCount\",0)\r\n                     self:SetVar(\"Vendor_SellCount\",0)\r\n            \r\n        end\r\n--//////////////////////////////////////////////////////////////////////////////////\r\n--//////////////////////////////////////////////////////////////////////////////////\r\n--//////////////////////////////////////////////////////////////////////////////////\r\n--//////////////////////////////////////////////////////////////////////////////////  \r\n\r\n    \r\nend\r\n\r\nonTimerDone = function(self, msg)\r\n\r\n    if msg.name == \"BreakPlayEmote\" then\r\n     setState(\"VenderIdle\",self)\r\n    end\r\n\r\nend\r\n\r\n\r\n--------  Vendor Buy\r\nonBuyFromVendor = function(self, msg)\r\n  \r\n      self:SetVar(\"Vendor_BuyCount\", msg.count)\r\n      Emote.emote(self, target, self:GetVar(\"Ven.Emote_onBuyType\") ) \r\nend\r\n\r\n-------  Vendor Sell\r\nonSellToVendor = function(self, msg)\r\n \r\n     Emote.emote(self, target, self:GetVar(\"Ven.Emote_onSellType\") ) \r\n     self:SetVar(\"Vendor_SellCount\", msg.count)\r\n\r\nend\r\n\r\n------- Vendor Exit\r\nonTerminateInteraction = function(self, msg) \r\n\r\n    \r\nend \r\n\r\n-------------------------- MIS\r\n\r\nfunction SetVendorEmote(self, type)\r\n    self:SetVar(\"EmoteType\", type)\r\nend\r\n\r\nfunction storeVendorTarget(self, target)\r\n    idString = target:GetID()\r\n    finalID = \"|\" .. idString\r\n    self:SetVar(\"myVendorTarget\", finalID)\r\nend\r\n\r\nfunction getMyVendorTarget(self)\r\n    targetID = self:GetVar(\"myVendorTarget\")\r\n    return GAMEOBJ:GetObjectByID(targetID)\r\nend\r\n\r\nfunction emote(self,target, skillType)\r\n       \r\n        self:SetVar(\"EmbeddedTime\", self:GetAnimationTime{  animationID = \"interact\" }.time)\r\n        self:PlayFXEffect {priority = 1.2, effectType = skillType}\r\nend\r\n\r\n--","raw":"--[[ function onProximityUpdate(self, msg)\r\n \r\n           \r\n    if msg.objType == \"Enemies\" or msg.objType == \"NPC\" then\r\n--//////////////////////////////////////////////////////////////////////////////////\r\n--//////////////////////////////////////////////////////////////////////////////////\r\n--//////////////////////////////////////////////////////////////////////////////////\r\n--//////////////////////////////////////////////////////////////////////////////////\r\n\r\n        if  msg.name == \"conductRadius\" and msg.status == \"ENTER\" then\r\n      \r\n                storeVendorTarget(self, msg.objId)\r\n                SetVendorEmote(self, self:GetVar(\"Ven.Emote_enterType\"))\r\n                setState(\"VenderEmote\",self)\r\n              \r\n            end\r\n        end\r\n        if  msg.name == \"conductRadius\" and msg.status == \"LEAVE\" and not self:GetVar(\"ExitConductTimer_Started\")then\r\n        \r\n                 storeVendorTarget(self, msg.objId)\r\n                if self:GetVar(\"Vendor_SellCount\") ~= 0 or  self:GetVar(\"Vendor_BuyCount\") ~= 0 then\r\n                    SetVendorEmote(self, self:GetVar(\"Ven.Emote_onExitBuySell\"))\r\n                    setState(\"VenderEmote\",self)\r\n                else\r\n                    SetVendorEmote(self, self:GetVar(\"Ven.Emote_onExitType\"))\r\n                    setState(\"VenderEmote\",self)\r\n                end\r\n                     self:SetVar(\"Vendor_BuyCount\",0)\r\n                     self:SetVar(\"Vendor_SellCount\",0)\r\n            \r\n        end\r\n--//////////////////////////////////////////////////////////////////////////////////\r\n--//////////////////////////////////////////////////////////////////////////////////\r\n--//////////////////////////////////////////////////////////////////////////////////\r\n--//////////////////////////////////////////////////////////////////////////////////  \r\n\r\n    \r\nend\r\n\r\nonTimerDone = function(self, msg)\r\n\r\n    if msg.name == \"BreakPlayEmote\" then\r\n     setState(\"VenderIdle\",self)\r\n    end\r\n\r\nend\r\n\r\n\r\n--------  Vendor Buy\r\nonBuyFromVendor = function(self, msg)\r\n  \r\n      self:SetVar(\"Vendor_BuyCount\", msg.count)\r\n      Emote.emote(self, target, self:GetVar(\"Ven.Emote_onBuyType\") ) \r\nend\r\n\r\n-------  Vendor Sell\r\nonSellToVendor = function(self, msg)\r\n \r\n     Emote.emote(self, target, self:GetVar(\"Ven.Emote_onSellType\") ) \r\n     self:SetVar(\"Vendor_SellCount\", msg.count)\r\n\r\nend\r\n\r\n------- Vendor Exit\r\nonTerminateInteraction = function(self, msg) \r\n\r\n    \r\nend \r\n\r\n-------------------------- MIS\r\n\r\nfunction SetVendorEmote(self, type)\r\n    self:SetVar(\"EmoteType\", type)\r\nend\r\n\r\nfunction storeVendorTarget(self, target)\r\n    idString = target:GetID()\r\n    finalID = \"|\" .. idString\r\n    self:SetVar(\"myVendorTarget\", finalID)\r\nend\r\n\r\nfunction getMyVendorTarget(self)\r\n    targetID = self:GetVar(\"myVendorTarget\")\r\n    return GAMEOBJ:GetObjectByID(targetID)\r\nend\r\n\r\nfunction emote(self,target, skillType)\r\n       \r\n        self:SetVar(\"EmbeddedTime\", self:GetAnimationTime{  animationID = \"interact\" }.time)\r\n        self:PlayFXEffect {priority = 1.2, effectType = skillType}\r\nend\r\n\r\n--]]"}]}